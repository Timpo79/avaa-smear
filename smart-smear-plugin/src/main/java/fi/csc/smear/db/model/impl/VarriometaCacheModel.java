package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;

import fi.csc.smear.db.model.Varriometa;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import java.util.Date;

/**
 * The cache model class for representing Varriometa in entity cache.
 *
 * @author pj
 * @see Varriometa
 * @generated
 */
public class VarriometaCacheModel implements CacheModel<Varriometa>,
    Externalizable {
    public long SAMPTIME;
    public float WS0;
    public float WS1;
    public float WS2;
    public float WS3;
    public float WS4;
    public float RMM;
    public float TLOG;
    public float PAR;
    public float GLOB;
    public float REFL;
    public float NET;
    public float UVA;
    public float UVB;
    public float UVAT;
    public float UVBT;
    public float RAIN;
    public float TDRY0;
    public float TWET0;
    public float TDRY1;
    public float TWET1;
    public float TDRY2;
    public float TWET2;
    public float TDRY3;
    public float TWET3;
    public float TDRY4;
    public float TWET4;
    public float ST;
    public float WDIR;
    public float CPC1;
    public float O3_0;
    public float O3_1;
    public float O3_2;
    public float O3_3;
    public float O3_4;
    public float SO2_0;
    public float SO2_1;
    public float SO2_2;
    public float SO2_3;
    public float SO2_4;
    public float NO_0;
    public float NO_1;
    public float NO_2;
    public float NO_4;
    public float NOX_0;
    public float NOX_1;
    public float NOX_2;
    public float NOX_4;
    public float P;
    public float HUM_RH;
    public float HUM_T;
    public float temp;
    public float WS00;
    public float visibility;
    public float rainint;
    public float Precipacc;
    public float haildiammax;
    public float snowint;
    public float visibilitylpm;
    public int wthcode;
    public float CO_1;
    public int quality;
    public float Tsoil;
    public float wsoil;
    public float CO206;
    public float CO2soil;
    public int Tsoil_EMEP;
    public int wsoil_EMEP;
    public int CO206_EMEP;
    public int CO2soil_EMEP;

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(141);

        sb.append("{SAMPTIME=");
        sb.append(SAMPTIME);
        sb.append(", WS0=");
        sb.append(WS0);
        sb.append(", WS1=");
        sb.append(WS1);
        sb.append(", WS2=");
        sb.append(WS2);
        sb.append(", WS3=");
        sb.append(WS3);
        sb.append(", WS4=");
        sb.append(WS4);
        sb.append(", RMM=");
        sb.append(RMM);
        sb.append(", TLOG=");
        sb.append(TLOG);
        sb.append(", PAR=");
        sb.append(PAR);
        sb.append(", GLOB=");
        sb.append(GLOB);
        sb.append(", REFL=");
        sb.append(REFL);
        sb.append(", NET=");
        sb.append(NET);
        sb.append(", UVA=");
        sb.append(UVA);
        sb.append(", UVB=");
        sb.append(UVB);
        sb.append(", UVAT=");
        sb.append(UVAT);
        sb.append(", UVBT=");
        sb.append(UVBT);
        sb.append(", RAIN=");
        sb.append(RAIN);
        sb.append(", TDRY0=");
        sb.append(TDRY0);
        sb.append(", TWET0=");
        sb.append(TWET0);
        sb.append(", TDRY1=");
        sb.append(TDRY1);
        sb.append(", TWET1=");
        sb.append(TWET1);
        sb.append(", TDRY2=");
        sb.append(TDRY2);
        sb.append(", TWET2=");
        sb.append(TWET2);
        sb.append(", TDRY3=");
        sb.append(TDRY3);
        sb.append(", TWET3=");
        sb.append(TWET3);
        sb.append(", TDRY4=");
        sb.append(TDRY4);
        sb.append(", TWET4=");
        sb.append(TWET4);
        sb.append(", ST=");
        sb.append(ST);
        sb.append(", WDIR=");
        sb.append(WDIR);
        sb.append(", CPC1=");
        sb.append(CPC1);
        sb.append(", O3_0=");
        sb.append(O3_0);
        sb.append(", O3_1=");
        sb.append(O3_1);
        sb.append(", O3_2=");
        sb.append(O3_2);
        sb.append(", O3_3=");
        sb.append(O3_3);
        sb.append(", O3_4=");
        sb.append(O3_4);
        sb.append(", SO2_0=");
        sb.append(SO2_0);
        sb.append(", SO2_1=");
        sb.append(SO2_1);
        sb.append(", SO2_2=");
        sb.append(SO2_2);
        sb.append(", SO2_3=");
        sb.append(SO2_3);
        sb.append(", SO2_4=");
        sb.append(SO2_4);
        sb.append(", NO_0=");
        sb.append(NO_0);
        sb.append(", NO_1=");
        sb.append(NO_1);
        sb.append(", NO_2=");
        sb.append(NO_2);
        sb.append(", NO_4=");
        sb.append(NO_4);
        sb.append(", NOX_0=");
        sb.append(NOX_0);
        sb.append(", NOX_1=");
        sb.append(NOX_1);
        sb.append(", NOX_2=");
        sb.append(NOX_2);
        sb.append(", NOX_4=");
        sb.append(NOX_4);
        sb.append(", P=");
        sb.append(P);
        sb.append(", HUM_RH=");
        sb.append(HUM_RH);
        sb.append(", HUM_T=");
        sb.append(HUM_T);
        sb.append(", temp=");
        sb.append(temp);
        sb.append(", WS00=");
        sb.append(WS00);
        sb.append(", visibility=");
        sb.append(visibility);
        sb.append(", rainint=");
        sb.append(rainint);
        sb.append(", Precipacc=");
        sb.append(Precipacc);
        sb.append(", haildiammax=");
        sb.append(haildiammax);
        sb.append(", snowint=");
        sb.append(snowint);
        sb.append(", visibilitylpm=");
        sb.append(visibilitylpm);
        sb.append(", wthcode=");
        sb.append(wthcode);
        sb.append(", CO_1=");
        sb.append(CO_1);
        sb.append(", quality=");
        sb.append(quality);
        sb.append(", Tsoil=");
        sb.append(Tsoil);
        sb.append(", wsoil=");
        sb.append(wsoil);
        sb.append(", CO206=");
        sb.append(CO206);
        sb.append(", CO2soil=");
        sb.append(CO2soil);
        sb.append(", Tsoil_EMEP=");
        sb.append(Tsoil_EMEP);
        sb.append(", wsoil_EMEP=");
        sb.append(wsoil_EMEP);
        sb.append(", CO206_EMEP=");
        sb.append(CO206_EMEP);
        sb.append(", CO2soil_EMEP=");
        sb.append(CO2soil_EMEP);
        sb.append("}");

        return sb.toString();
    }

    @Override
    public Varriometa toEntityModel() {
        VarriometaImpl varriometaImpl = new VarriometaImpl();

        if (SAMPTIME == Long.MIN_VALUE) {
            varriometaImpl.setSAMPTIME(null);
        } else {
            varriometaImpl.setSAMPTIME(new Date(SAMPTIME));
        }

        varriometaImpl.setWS0(WS0);
        varriometaImpl.setWS1(WS1);
        varriometaImpl.setWS2(WS2);
        varriometaImpl.setWS3(WS3);
        varriometaImpl.setWS4(WS4);
        varriometaImpl.setRMM(RMM);
        varriometaImpl.setTLOG(TLOG);
        varriometaImpl.setPAR(PAR);
        varriometaImpl.setGLOB(GLOB);
        varriometaImpl.setREFL(REFL);
        varriometaImpl.setNET(NET);
        varriometaImpl.setUVA(UVA);
        varriometaImpl.setUVB(UVB);
        varriometaImpl.setUVAT(UVAT);
        varriometaImpl.setUVBT(UVBT);
        varriometaImpl.setRAIN(RAIN);
        varriometaImpl.setTDRY0(TDRY0);
        varriometaImpl.setTWET0(TWET0);
        varriometaImpl.setTDRY1(TDRY1);
        varriometaImpl.setTWET1(TWET1);
        varriometaImpl.setTDRY2(TDRY2);
        varriometaImpl.setTWET2(TWET2);
        varriometaImpl.setTDRY3(TDRY3);
        varriometaImpl.setTWET3(TWET3);
        varriometaImpl.setTDRY4(TDRY4);
        varriometaImpl.setTWET4(TWET4);
        varriometaImpl.setST(ST);
        varriometaImpl.setWDIR(WDIR);
        varriometaImpl.setCPC1(CPC1);
        varriometaImpl.setO3_0(O3_0);
        varriometaImpl.setO3_1(O3_1);
        varriometaImpl.setO3_2(O3_2);
        varriometaImpl.setO3_3(O3_3);
        varriometaImpl.setO3_4(O3_4);
        varriometaImpl.setSO2_0(SO2_0);
        varriometaImpl.setSO2_1(SO2_1);
        varriometaImpl.setSO2_2(SO2_2);
        varriometaImpl.setSO2_3(SO2_3);
        varriometaImpl.setSO2_4(SO2_4);
        varriometaImpl.setNO_0(NO_0);
        varriometaImpl.setNO_1(NO_1);
        varriometaImpl.setNO_2(NO_2);
        varriometaImpl.setNO_4(NO_4);
        varriometaImpl.setNOX_0(NOX_0);
        varriometaImpl.setNOX_1(NOX_1);
        varriometaImpl.setNOX_2(NOX_2);
        varriometaImpl.setNOX_4(NOX_4);
        varriometaImpl.setP(P);
        varriometaImpl.setHUM_RH(HUM_RH);
        varriometaImpl.setHUM_T(HUM_T);
        varriometaImpl.setTemp(temp);
        varriometaImpl.setWS00(WS00);
        varriometaImpl.setVisibility(visibility);
        varriometaImpl.setRainint(rainint);
        varriometaImpl.setPrecipacc(Precipacc);
        varriometaImpl.setHaildiammax(haildiammax);
        varriometaImpl.setSnowint(snowint);
        varriometaImpl.setVisibilitylpm(visibilitylpm);
        varriometaImpl.setWthcode(wthcode);
        varriometaImpl.setCO_1(CO_1);
        varriometaImpl.setQuality(quality);
        varriometaImpl.setTsoil(Tsoil);
        varriometaImpl.setWsoil(wsoil);
        varriometaImpl.setCO206(CO206);
        varriometaImpl.setCO2soil(CO2soil);
        varriometaImpl.setTsoil_EMEP(Tsoil_EMEP);
        varriometaImpl.setWsoil_EMEP(wsoil_EMEP);
        varriometaImpl.setCO206_EMEP(CO206_EMEP);
        varriometaImpl.setCO2soil_EMEP(CO2soil_EMEP);

        varriometaImpl.resetOriginalValues();

        return varriometaImpl;
    }

    @Override
    public void readExternal(ObjectInput objectInput) throws IOException {
        SAMPTIME = objectInput.readLong();
        WS0 = objectInput.readFloat();
        WS1 = objectInput.readFloat();
        WS2 = objectInput.readFloat();
        WS3 = objectInput.readFloat();
        WS4 = objectInput.readFloat();
        RMM = objectInput.readFloat();
        TLOG = objectInput.readFloat();
        PAR = objectInput.readFloat();
        GLOB = objectInput.readFloat();
        REFL = objectInput.readFloat();
        NET = objectInput.readFloat();
        UVA = objectInput.readFloat();
        UVB = objectInput.readFloat();
        UVAT = objectInput.readFloat();
        UVBT = objectInput.readFloat();
        RAIN = objectInput.readFloat();
        TDRY0 = objectInput.readFloat();
        TWET0 = objectInput.readFloat();
        TDRY1 = objectInput.readFloat();
        TWET1 = objectInput.readFloat();
        TDRY2 = objectInput.readFloat();
        TWET2 = objectInput.readFloat();
        TDRY3 = objectInput.readFloat();
        TWET3 = objectInput.readFloat();
        TDRY4 = objectInput.readFloat();
        TWET4 = objectInput.readFloat();
        ST = objectInput.readFloat();
        WDIR = objectInput.readFloat();
        CPC1 = objectInput.readFloat();
        O3_0 = objectInput.readFloat();
        O3_1 = objectInput.readFloat();
        O3_2 = objectInput.readFloat();
        O3_3 = objectInput.readFloat();
        O3_4 = objectInput.readFloat();
        SO2_0 = objectInput.readFloat();
        SO2_1 = objectInput.readFloat();
        SO2_2 = objectInput.readFloat();
        SO2_3 = objectInput.readFloat();
        SO2_4 = objectInput.readFloat();
        NO_0 = objectInput.readFloat();
        NO_1 = objectInput.readFloat();
        NO_2 = objectInput.readFloat();
        NO_4 = objectInput.readFloat();
        NOX_0 = objectInput.readFloat();
        NOX_1 = objectInput.readFloat();
        NOX_2 = objectInput.readFloat();
        NOX_4 = objectInput.readFloat();
        P = objectInput.readFloat();
        HUM_RH = objectInput.readFloat();
        HUM_T = objectInput.readFloat();
        temp = objectInput.readFloat();
        WS00 = objectInput.readFloat();
        visibility = objectInput.readFloat();
        rainint = objectInput.readFloat();
        Precipacc = objectInput.readFloat();
        haildiammax = objectInput.readFloat();
        snowint = objectInput.readFloat();
        visibilitylpm = objectInput.readFloat();
        wthcode = objectInput.readInt();
        CO_1 = objectInput.readFloat();
        quality = objectInput.readInt();
        Tsoil = objectInput.readFloat();
        wsoil = objectInput.readFloat();
        CO206 = objectInput.readFloat();
        CO2soil = objectInput.readFloat();
        Tsoil_EMEP = objectInput.readInt();
        wsoil_EMEP = objectInput.readInt();
        CO206_EMEP = objectInput.readInt();
        CO2soil_EMEP = objectInput.readInt();
    }

    @Override
    public void writeExternal(ObjectOutput objectOutput)
        throws IOException {
        objectOutput.writeLong(SAMPTIME);
        objectOutput.writeFloat(WS0);
        objectOutput.writeFloat(WS1);
        objectOutput.writeFloat(WS2);
        objectOutput.writeFloat(WS3);
        objectOutput.writeFloat(WS4);
        objectOutput.writeFloat(RMM);
        objectOutput.writeFloat(TLOG);
        objectOutput.writeFloat(PAR);
        objectOutput.writeFloat(GLOB);
        objectOutput.writeFloat(REFL);
        objectOutput.writeFloat(NET);
        objectOutput.writeFloat(UVA);
        objectOutput.writeFloat(UVB);
        objectOutput.writeFloat(UVAT);
        objectOutput.writeFloat(UVBT);
        objectOutput.writeFloat(RAIN);
        objectOutput.writeFloat(TDRY0);
        objectOutput.writeFloat(TWET0);
        objectOutput.writeFloat(TDRY1);
        objectOutput.writeFloat(TWET1);
        objectOutput.writeFloat(TDRY2);
        objectOutput.writeFloat(TWET2);
        objectOutput.writeFloat(TDRY3);
        objectOutput.writeFloat(TWET3);
        objectOutput.writeFloat(TDRY4);
        objectOutput.writeFloat(TWET4);
        objectOutput.writeFloat(ST);
        objectOutput.writeFloat(WDIR);
        objectOutput.writeFloat(CPC1);
        objectOutput.writeFloat(O3_0);
        objectOutput.writeFloat(O3_1);
        objectOutput.writeFloat(O3_2);
        objectOutput.writeFloat(O3_3);
        objectOutput.writeFloat(O3_4);
        objectOutput.writeFloat(SO2_0);
        objectOutput.writeFloat(SO2_1);
        objectOutput.writeFloat(SO2_2);
        objectOutput.writeFloat(SO2_3);
        objectOutput.writeFloat(SO2_4);
        objectOutput.writeFloat(NO_0);
        objectOutput.writeFloat(NO_1);
        objectOutput.writeFloat(NO_2);
        objectOutput.writeFloat(NO_4);
        objectOutput.writeFloat(NOX_0);
        objectOutput.writeFloat(NOX_1);
        objectOutput.writeFloat(NOX_2);
        objectOutput.writeFloat(NOX_4);
        objectOutput.writeFloat(P);
        objectOutput.writeFloat(HUM_RH);
        objectOutput.writeFloat(HUM_T);
        objectOutput.writeFloat(temp);
        objectOutput.writeFloat(WS00);
        objectOutput.writeFloat(visibility);
        objectOutput.writeFloat(rainint);
        objectOutput.writeFloat(Precipacc);
        objectOutput.writeFloat(haildiammax);
        objectOutput.writeFloat(snowint);
        objectOutput.writeFloat(visibilitylpm);
        objectOutput.writeInt(wthcode);
        objectOutput.writeFloat(CO_1);
        objectOutput.writeInt(quality);
        objectOutput.writeFloat(Tsoil);
        objectOutput.writeFloat(wsoil);
        objectOutput.writeFloat(CO206);
        objectOutput.writeFloat(CO2soil);
        objectOutput.writeInt(Tsoil_EMEP);
        objectOutput.writeInt(wsoil_EMEP);
        objectOutput.writeInt(CO206_EMEP);
        objectOutput.writeInt(CO2soil_EMEP);
    }
}
