package fi.csc.smear.db.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the SmearVariableMetadata service. Represents a row in the &quot;VariableMetadata&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link fi.csc.smear.db.model.impl.SmearVariableMetadataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link fi.csc.smear.db.model.impl.SmearVariableMetadataImpl}.
 * </p>
 *
 * @author pj
 * @see SmearVariableMetadata
 * @see fi.csc.smear.db.model.impl.SmearVariableMetadataImpl
 * @see fi.csc.smear.db.model.impl.SmearVariableMetadataModelImpl
 * @generated
 */
public interface SmearVariableMetadataModel extends BaseModel<SmearVariableMetadata> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a smear variable metadata model instance should use the {@link SmearVariableMetadata} interface instead.
     */

    /**
     * Returns the primary key of this smear variable metadata.
     *
     * @return the primary key of this smear variable metadata
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this smear variable metadata.
     *
     * @param primaryKey the primary key of this smear variable metadata
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the variable i d of this smear variable metadata.
     *
     * @return the variable i d of this smear variable metadata
     */
    public long getVariableID();

    /**
     * Sets the variable i d of this smear variable metadata.
     *
     * @param variableID the variable i d of this smear variable metadata
     */
    public void setVariableID(long variableID);

    /**
     * Returns the table i d of this smear variable metadata.
     *
     * @return the table i d of this smear variable metadata
     */
    public long getTableID();

    /**
     * Sets the table i d of this smear variable metadata.
     *
     * @param tableID the table i d of this smear variable metadata
     */
    public void setTableID(long tableID);

    /**
     * Returns the variable of this smear variable metadata.
     *
     * @return the variable of this smear variable metadata
     */
    @AutoEscape
    public String getVariable();

    /**
     * Sets the variable of this smear variable metadata.
     *
     * @param variable the variable of this smear variable metadata
     */
    public void setVariable(String variable);

    /**
     * Returns the description of this smear variable metadata.
     *
     * @return the description of this smear variable metadata
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this smear variable metadata.
     *
     * @param description the description of this smear variable metadata
     */
    public void setDescription(String description);

    /**
     * Returns the unit of this smear variable metadata.
     *
     * @return the unit of this smear variable metadata
     */
    @AutoEscape
    public String getUnit();

    /**
     * Sets the unit of this smear variable metadata.
     *
     * @param unit the unit of this smear variable metadata
     */
    public void setUnit(String unit);

    /**
     * Returns the title of this smear variable metadata.
     *
     * @return the title of this smear variable metadata
     */
    @AutoEscape
    public String getTitle();

    /**
     * Sets the title of this smear variable metadata.
     *
     * @param title the title of this smear variable metadata
     */
    public void setTitle(String title);

    /**
     * Returns the source of this smear variable metadata.
     *
     * @return the source of this smear variable metadata
     */
    @AutoEscape
    public String getSource();

    /**
     * Sets the source of this smear variable metadata.
     *
     * @param source the source of this smear variable metadata
     */
    public void setSource(String source);

    /**
     * Returns the period_start of this smear variable metadata.
     *
     * @return the period_start of this smear variable metadata
     */
    public Date getPeriod_start();

    /**
     * Sets the period_start of this smear variable metadata.
     *
     * @param period_start the period_start of this smear variable metadata
     */
    public void setPeriod_start(Date period_start);

    /**
     * Returns the period_end of this smear variable metadata.
     *
     * @return the period_end of this smear variable metadata
     */
    public Date getPeriod_end();

    /**
     * Sets the period_end of this smear variable metadata.
     *
     * @param period_end the period_end of this smear variable metadata
     */
    public void setPeriod_end(Date period_end);

    /**
     * Returns the coverage of this smear variable metadata.
     *
     * @return the coverage of this smear variable metadata
     */
    public long getCoverage();

    /**
     * Sets the coverage of this smear variable metadata.
     *
     * @param coverage the coverage of this smear variable metadata
     */
    public void setCoverage(long coverage);

    /**
     * Returns the rights of this smear variable metadata.
     *
     * @return the rights of this smear variable metadata
     */
    @AutoEscape
    public String getRights();

    /**
     * Sets the rights of this smear variable metadata.
     *
     * @param rights the rights of this smear variable metadata
     */
    public void setRights(String rights);

    /**
     * Returns the mandatory of this smear variable metadata.
     *
     * @return the mandatory of this smear variable metadata
     */
    public boolean getMandatory();

    /**
     * Returns <code>true</code> if this smear variable metadata is mandatory.
     *
     * @return <code>true</code> if this smear variable metadata is mandatory; <code>false</code> otherwise
     */
    public boolean isMandatory();

    /**
     * Sets whether this smear variable metadata is mandatory.
     *
     * @param mandatory the mandatory of this smear variable metadata
     */
    public void setMandatory(boolean mandatory);

    /**
     * Returns the derivative of this smear variable metadata.
     *
     * @return the derivative of this smear variable metadata
     */
    public boolean getDerivative();

    /**
     * Returns <code>true</code> if this smear variable metadata is derivative.
     *
     * @return <code>true</code> if this smear variable metadata is derivative; <code>false</code> otherwise
     */
    public boolean isDerivative();

    /**
     * Sets whether this smear variable metadata is derivative.
     *
     * @param derivative the derivative of this smear variable metadata
     */
    public void setDerivative(boolean derivative);

    /**
     * Returns the vtimestamp of this smear variable metadata.
     *
     * @return the vtimestamp of this smear variable metadata
     */
    public Date getVtimestamp();

    /**
     * Sets the vtimestamp of this smear variable metadata.
     *
     * @param vtimestamp the vtimestamp of this smear variable metadata
     */
    public void setVtimestamp(Date vtimestamp);

    /**
     * Returns the category of this smear variable metadata.
     *
     * @return the category of this smear variable metadata
     */
    @AutoEscape
    public String getCategory();

    /**
     * Sets the category of this smear variable metadata.
     *
     * @param category the category of this smear variable metadata
     */
    public void setCategory(String category);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(SmearVariableMetadata smearVariableMetadata);

    @Override
    public int hashCode();

    @Override
    public CacheModel<SmearVariableMetadata> toCacheModel();

    @Override
    public SmearVariableMetadata toEscapedModel();

    @Override
    public SmearVariableMetadata toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
