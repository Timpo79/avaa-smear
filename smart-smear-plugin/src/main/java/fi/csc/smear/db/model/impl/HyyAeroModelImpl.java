package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.smear.db.model.HyyAero;
import fi.csc.smear.db.model.HyyAeroModel;
import fi.csc.smear.db.model.HyyAeroSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the HyyAero service. Represents a row in the &quot;HYY_AERO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.smear.db.model.HyyAeroModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HyyAeroImpl}.
 * </p>
 *
 * @author pj
 * @see HyyAeroImpl
 * @see fi.csc.smear.db.model.HyyAero
 * @see fi.csc.smear.db.model.HyyAeroModel
 * @generated
 */
@JSON(strict = true)
public class HyyAeroModelImpl extends BaseModelImpl<HyyAero>
    implements HyyAeroModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a hyy aero model instance should use the {@link fi.csc.smear.db.model.HyyAero} interface instead.
     */
    public static final String TABLE_NAME = "HYY_AERO";
    public static final Object[][] TABLE_COLUMNS = {
            { "samptime", Types.TIMESTAMP },
            { "cn", Types.FLOAT },
            { "cn_t", Types.FLOAT },
            { "cn_p", Types.FLOAT }
        };
    public static final String TABLE_SQL_CREATE = "create table HYY_AERO (samptime DATE not null primary key,cn DOUBLE,cn_t DOUBLE,cn_p DOUBLE)";
    public static final String TABLE_SQL_DROP = "drop table HYY_AERO";
    public static final String ORDER_BY_JPQL = " ORDER BY hyyAero.samptime ASC";
    public static final String ORDER_BY_SQL = " ORDER BY HYY_AERO.samptime ASC";
    public static final String DATA_SOURCE = "smear";
    public static final String SESSION_FACTORY = "smearSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.smear.db.model.HyyAero"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.smear.db.model.HyyAero"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.smear.db.model.HyyAero"));
    private static ClassLoader _classLoader = HyyAero.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            HyyAero.class
        };
    private Date _samptime;
    private float _cn;
    private float _cn_t;
    private float _cn_p;
    private HyyAero _escapedModel;

    public HyyAeroModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static HyyAero toModel(HyyAeroSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        HyyAero model = new HyyAeroImpl();

        model.setSamptime(soapModel.getSamptime());
        model.setCn(soapModel.getCn());
        model.setCn_t(soapModel.getCn_t());
        model.setCn_p(soapModel.getCn_p());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<HyyAero> toModels(HyyAeroSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<HyyAero> models = new ArrayList<HyyAero>(soapModels.length);

        for (HyyAeroSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public java.util.Date getPrimaryKey() {
        return _samptime;
    }

    @Override
    public void setPrimaryKey(java.util.Date primaryKey) {
        setSamptime(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _samptime;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((java.util.Date) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return HyyAero.class;
    }

    @Override
    public String getModelClassName() {
        return HyyAero.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("samptime", getSamptime());
        attributes.put("cn", getCn());
        attributes.put("cn_t", getCn_t());
        attributes.put("cn_p", getCn_p());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Date samptime = (Date) attributes.get("samptime");

        if (samptime != null) {
            setSamptime(samptime);
        }

        Float cn = (Float) attributes.get("cn");

        if (cn != null) {
            setCn(cn);
        }

        Float cn_t = (Float) attributes.get("cn_t");

        if (cn_t != null) {
            setCn_t(cn_t);
        }

        Float cn_p = (Float) attributes.get("cn_p");

        if (cn_p != null) {
            setCn_p(cn_p);
        }
    }

    @JSON
    @Override
    public Date getSamptime() {
        return _samptime;
    }

    @Override
    public void setSamptime(Date samptime) {
        _samptime = samptime;
    }

    @JSON
    @Override
    public float getCn() {
        return _cn;
    }

    @Override
    public void setCn(float cn) {
        _cn = cn;
    }

    @JSON
    @Override
    public float getCn_t() {
        return _cn_t;
    }

    @Override
    public void setCn_t(float cn_t) {
        _cn_t = cn_t;
    }

    @JSON
    @Override
    public float getCn_p() {
        return _cn_p;
    }

    @Override
    public void setCn_p(float cn_p) {
        _cn_p = cn_p;
    }

    @Override
    public HyyAero toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (HyyAero) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        HyyAeroImpl hyyAeroImpl = new HyyAeroImpl();

        hyyAeroImpl.setSamptime(getSamptime());
        hyyAeroImpl.setCn(getCn());
        hyyAeroImpl.setCn_t(getCn_t());
        hyyAeroImpl.setCn_p(getCn_p());

        hyyAeroImpl.resetOriginalValues();

        return hyyAeroImpl;
    }

    @Override
    public int compareTo(HyyAero hyyAero) {
        java.util.Date primaryKey = hyyAero.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof HyyAero)) {
            return false;
        }

        HyyAero hyyAero = (HyyAero) obj;

        java.util.Date primaryKey = hyyAero.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<HyyAero> toCacheModel() {
        HyyAeroCacheModel hyyAeroCacheModel = new HyyAeroCacheModel();

        Date samptime = getSamptime();

        if (samptime != null) {
            hyyAeroCacheModel.samptime = samptime.getTime();
        } else {
            hyyAeroCacheModel.samptime = Long.MIN_VALUE;
        }

        hyyAeroCacheModel.cn = getCn();

        hyyAeroCacheModel.cn_t = getCn_t();

        hyyAeroCacheModel.cn_p = getCn_p();

        return hyyAeroCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{samptime=");
        sb.append(getSamptime());
        sb.append(", cn=");
        sb.append(getCn());
        sb.append(", cn_t=");
        sb.append(getCn_t());
        sb.append(", cn_p=");
        sb.append(getCn_p());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("fi.csc.smear.db.model.HyyAero");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>samptime</column-name><column-value><![CDATA[");
        sb.append(getSamptime());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cn</column-name><column-value><![CDATA[");
        sb.append(getCn());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cn_t</column-name><column-value><![CDATA[");
        sb.append(getCn_t());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cn_p</column-name><column-value><![CDATA[");
        sb.append(getCn_p());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
