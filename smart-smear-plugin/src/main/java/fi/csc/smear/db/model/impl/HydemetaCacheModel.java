package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;

import fi.csc.smear.db.model.Hydemeta;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import java.util.Date;

/**
 * The cache model class for representing Hydemeta in entity cache.
 *
 * @author pj
 * @see Hydemeta
 * @generated
 */
public class HydemetaCacheModel implements CacheModel<Hydemeta>, Externalizable {
    public long samptime;
    public float UV_A;
    public float UV_B;
    public float diffPAR;
    public float diffGLOB;
    public float dirGLOB;
    public float Net;
    public float RGlob;
    public float Glob;
    public float RPAR;
    public float PAR;
    public float dirPAR;
    public float canIR;
    public float skyIR;
    public float Precip;
    public float SWS;
    public float Td;
    public float Pamb0;
    public float T672;
    public float T504;
    public float T336;
    public float T168;
    public float T84;
    public float T42;
    public float WS672;
    public float WS504;
    public float WS336;
    public float WS168;
    public float WS84;
    public float WS42;
    public float WSU740;
    public float WSU336;
    public float WSU168;
    public float WSU84;
    public float WD;
    public float WD504;
    public float WD336;
    public float WD168;
    public float WDU740;
    public float WDU336;
    public float WDU168;
    public float WDU84;
    public float NO672;
    public float NO504;
    public float NO336;
    public float NO168;
    public float NO84;
    public float NO42;
    public float NOx672;
    public float NOx504;
    public float NOx336;
    public float NOx168;
    public float NOx84;
    public float NOx42;
    public float O3672;
    public float O3504;
    public float O3336;
    public float O3168;
    public float O384;
    public float O342;
    public float SO2672;
    public float SO2504;
    public float SO2336;
    public float SO2168;
    public float SO284;
    public float SO242;
    public float H2O672;
    public float H2O504;
    public float H2O336;
    public float H2O168;
    public float H2O84;
    public float H2O42;
    public float CO2672;
    public float CO2504;
    public float CO2336;
    public float CO2168;
    public float CO284;
    public float CO242;
    public float H2S672;
    public float H2S504;
    public float H2S336;
    public float H2S168;
    public float H2S84;
    public float H2S42;
    public float RHIRGA672;
    public float RHIRGA504;
    public float RHIRGA336;
    public float RHIRGA168;
    public float RHIRGA84;
    public float RHIRGA42;
    public float CO672;
    public float CO504;
    public float CO336;
    public float CO168;
    public float CO84;
    public float CO42;
    public float RHTd;
    public float PTG;
    public float Visibility;
    public float Visibilitymin;
    public float Visibilitymax;
    public float Precipint;
    public float Precipintmin;
    public float Precipintmax;
    public float Precipacc;
    public float Snowfallacc;
    public int wthcode;
    public int wthcodemin;
    public int wthcodemax;
    public float tsoil_humus;
    public float tsoil_A;
    public float tsoil_B1;
    public float tsoil_B2;
    public float tsoil_C1;
    public float H2OTd;
    public float CO2_storage_flux;
    public float wsoil_humus;
    public float wsoil_A;
    public float wsoil_B1;
    public float wsoil_B2;
    public float wsoil_C1;
    public float LWin;
    public float LWout;
    public float PRI;
    public float NDVI;
    public float BNDVI;
    public float canPAR1;
    public float canPAR2;
    public float canPAR3;
    public float maaPAR;
    public float maaNet;
    public float PAR2;
    public float Globmast;
    public float WDU672;
    public float WSU672;
    public float RGlob125;
    public float CH4168;
    public float CH4672;
    public float CH41250;
    public float T1250;
    public float wpsoil_A;
    public float wpsoil_B;
    public float runoff1;
    public float runoff2;
    public float drainage1;
    public float CO2icos168;
    public float CO2icos672;
    public float CO2icos1250;
    public float H2Oicos168;
    public float H2Oicos672;
    public float H2Oicos1250;
    public int UV_A_EMEP;
    public int UV_B_EMEP;
    public int diffPAR_EMEP;
    public int diffGLOB_EMEP;
    public int dirGLOB_EMEP;
    public int Net_EMEP;
    public int RGlob_EMEP;
    public int Glob_EMEP;
    public int RPAR_EMEP;
    public int PAR_EMEP;
    public int dirPAR_EMEP;
    public int canIR_EMEP;

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(327);

        sb.append("{samptime=");
        sb.append(samptime);
        sb.append(", UV_A=");
        sb.append(UV_A);
        sb.append(", UV_B=");
        sb.append(UV_B);
        sb.append(", diffPAR=");
        sb.append(diffPAR);
        sb.append(", diffGLOB=");
        sb.append(diffGLOB);
        sb.append(", dirGLOB=");
        sb.append(dirGLOB);
        sb.append(", Net=");
        sb.append(Net);
        sb.append(", RGlob=");
        sb.append(RGlob);
        sb.append(", Glob=");
        sb.append(Glob);
        sb.append(", RPAR=");
        sb.append(RPAR);
        sb.append(", PAR=");
        sb.append(PAR);
        sb.append(", dirPAR=");
        sb.append(dirPAR);
        sb.append(", canIR=");
        sb.append(canIR);
        sb.append(", skyIR=");
        sb.append(skyIR);
        sb.append(", Precip=");
        sb.append(Precip);
        sb.append(", SWS=");
        sb.append(SWS);
        sb.append(", Td=");
        sb.append(Td);
        sb.append(", Pamb0=");
        sb.append(Pamb0);
        sb.append(", T672=");
        sb.append(T672);
        sb.append(", T504=");
        sb.append(T504);
        sb.append(", T336=");
        sb.append(T336);
        sb.append(", T168=");
        sb.append(T168);
        sb.append(", T84=");
        sb.append(T84);
        sb.append(", T42=");
        sb.append(T42);
        sb.append(", WS672=");
        sb.append(WS672);
        sb.append(", WS504=");
        sb.append(WS504);
        sb.append(", WS336=");
        sb.append(WS336);
        sb.append(", WS168=");
        sb.append(WS168);
        sb.append(", WS84=");
        sb.append(WS84);
        sb.append(", WS42=");
        sb.append(WS42);
        sb.append(", WSU740=");
        sb.append(WSU740);
        sb.append(", WSU336=");
        sb.append(WSU336);
        sb.append(", WSU168=");
        sb.append(WSU168);
        sb.append(", WSU84=");
        sb.append(WSU84);
        sb.append(", WD=");
        sb.append(WD);
        sb.append(", WD504=");
        sb.append(WD504);
        sb.append(", WD336=");
        sb.append(WD336);
        sb.append(", WD168=");
        sb.append(WD168);
        sb.append(", WDU740=");
        sb.append(WDU740);
        sb.append(", WDU336=");
        sb.append(WDU336);
        sb.append(", WDU168=");
        sb.append(WDU168);
        sb.append(", WDU84=");
        sb.append(WDU84);
        sb.append(", NO672=");
        sb.append(NO672);
        sb.append(", NO504=");
        sb.append(NO504);
        sb.append(", NO336=");
        sb.append(NO336);
        sb.append(", NO168=");
        sb.append(NO168);
        sb.append(", NO84=");
        sb.append(NO84);
        sb.append(", NO42=");
        sb.append(NO42);
        sb.append(", NOx672=");
        sb.append(NOx672);
        sb.append(", NOx504=");
        sb.append(NOx504);
        sb.append(", NOx336=");
        sb.append(NOx336);
        sb.append(", NOx168=");
        sb.append(NOx168);
        sb.append(", NOx84=");
        sb.append(NOx84);
        sb.append(", NOx42=");
        sb.append(NOx42);
        sb.append(", O3672=");
        sb.append(O3672);
        sb.append(", O3504=");
        sb.append(O3504);
        sb.append(", O3336=");
        sb.append(O3336);
        sb.append(", O3168=");
        sb.append(O3168);
        sb.append(", O384=");
        sb.append(O384);
        sb.append(", O342=");
        sb.append(O342);
        sb.append(", SO2672=");
        sb.append(SO2672);
        sb.append(", SO2504=");
        sb.append(SO2504);
        sb.append(", SO2336=");
        sb.append(SO2336);
        sb.append(", SO2168=");
        sb.append(SO2168);
        sb.append(", SO284=");
        sb.append(SO284);
        sb.append(", SO242=");
        sb.append(SO242);
        sb.append(", H2O672=");
        sb.append(H2O672);
        sb.append(", H2O504=");
        sb.append(H2O504);
        sb.append(", H2O336=");
        sb.append(H2O336);
        sb.append(", H2O168=");
        sb.append(H2O168);
        sb.append(", H2O84=");
        sb.append(H2O84);
        sb.append(", H2O42=");
        sb.append(H2O42);
        sb.append(", CO2672=");
        sb.append(CO2672);
        sb.append(", CO2504=");
        sb.append(CO2504);
        sb.append(", CO2336=");
        sb.append(CO2336);
        sb.append(", CO2168=");
        sb.append(CO2168);
        sb.append(", CO284=");
        sb.append(CO284);
        sb.append(", CO242=");
        sb.append(CO242);
        sb.append(", H2S672=");
        sb.append(H2S672);
        sb.append(", H2S504=");
        sb.append(H2S504);
        sb.append(", H2S336=");
        sb.append(H2S336);
        sb.append(", H2S168=");
        sb.append(H2S168);
        sb.append(", H2S84=");
        sb.append(H2S84);
        sb.append(", H2S42=");
        sb.append(H2S42);
        sb.append(", RHIRGA672=");
        sb.append(RHIRGA672);
        sb.append(", RHIRGA504=");
        sb.append(RHIRGA504);
        sb.append(", RHIRGA336=");
        sb.append(RHIRGA336);
        sb.append(", RHIRGA168=");
        sb.append(RHIRGA168);
        sb.append(", RHIRGA84=");
        sb.append(RHIRGA84);
        sb.append(", RHIRGA42=");
        sb.append(RHIRGA42);
        sb.append(", CO672=");
        sb.append(CO672);
        sb.append(", CO504=");
        sb.append(CO504);
        sb.append(", CO336=");
        sb.append(CO336);
        sb.append(", CO168=");
        sb.append(CO168);
        sb.append(", CO84=");
        sb.append(CO84);
        sb.append(", CO42=");
        sb.append(CO42);
        sb.append(", RHTd=");
        sb.append(RHTd);
        sb.append(", PTG=");
        sb.append(PTG);
        sb.append(", Visibility=");
        sb.append(Visibility);
        sb.append(", Visibilitymin=");
        sb.append(Visibilitymin);
        sb.append(", Visibilitymax=");
        sb.append(Visibilitymax);
        sb.append(", Precipint=");
        sb.append(Precipint);
        sb.append(", Precipintmin=");
        sb.append(Precipintmin);
        sb.append(", Precipintmax=");
        sb.append(Precipintmax);
        sb.append(", Precipacc=");
        sb.append(Precipacc);
        sb.append(", Snowfallacc=");
        sb.append(Snowfallacc);
        sb.append(", wthcode=");
        sb.append(wthcode);
        sb.append(", wthcodemin=");
        sb.append(wthcodemin);
        sb.append(", wthcodemax=");
        sb.append(wthcodemax);
        sb.append(", tsoil_humus=");
        sb.append(tsoil_humus);
        sb.append(", tsoil_A=");
        sb.append(tsoil_A);
        sb.append(", tsoil_B1=");
        sb.append(tsoil_B1);
        sb.append(", tsoil_B2=");
        sb.append(tsoil_B2);
        sb.append(", tsoil_C1=");
        sb.append(tsoil_C1);
        sb.append(", H2OTd=");
        sb.append(H2OTd);
        sb.append(", CO2_storage_flux=");
        sb.append(CO2_storage_flux);
        sb.append(", wsoil_humus=");
        sb.append(wsoil_humus);
        sb.append(", wsoil_A=");
        sb.append(wsoil_A);
        sb.append(", wsoil_B1=");
        sb.append(wsoil_B1);
        sb.append(", wsoil_B2=");
        sb.append(wsoil_B2);
        sb.append(", wsoil_C1=");
        sb.append(wsoil_C1);
        sb.append(", LWin=");
        sb.append(LWin);
        sb.append(", LWout=");
        sb.append(LWout);
        sb.append(", PRI=");
        sb.append(PRI);
        sb.append(", NDVI=");
        sb.append(NDVI);
        sb.append(", BNDVI=");
        sb.append(BNDVI);
        sb.append(", canPAR1=");
        sb.append(canPAR1);
        sb.append(", canPAR2=");
        sb.append(canPAR2);
        sb.append(", canPAR3=");
        sb.append(canPAR3);
        sb.append(", maaPAR=");
        sb.append(maaPAR);
        sb.append(", maaNet=");
        sb.append(maaNet);
        sb.append(", PAR2=");
        sb.append(PAR2);
        sb.append(", Globmast=");
        sb.append(Globmast);
        sb.append(", WDU672=");
        sb.append(WDU672);
        sb.append(", WSU672=");
        sb.append(WSU672);
        sb.append(", RGlob125=");
        sb.append(RGlob125);
        sb.append(", CH4168=");
        sb.append(CH4168);
        sb.append(", CH4672=");
        sb.append(CH4672);
        sb.append(", CH41250=");
        sb.append(CH41250);
        sb.append(", T1250=");
        sb.append(T1250);
        sb.append(", wpsoil_A=");
        sb.append(wpsoil_A);
        sb.append(", wpsoil_B=");
        sb.append(wpsoil_B);
        sb.append(", runoff1=");
        sb.append(runoff1);
        sb.append(", runoff2=");
        sb.append(runoff2);
        sb.append(", drainage1=");
        sb.append(drainage1);
        sb.append(", CO2icos168=");
        sb.append(CO2icos168);
        sb.append(", CO2icos672=");
        sb.append(CO2icos672);
        sb.append(", CO2icos1250=");
        sb.append(CO2icos1250);
        sb.append(", H2Oicos168=");
        sb.append(H2Oicos168);
        sb.append(", H2Oicos672=");
        sb.append(H2Oicos672);
        sb.append(", H2Oicos1250=");
        sb.append(H2Oicos1250);
        sb.append(", UV_A_EMEP=");
        sb.append(UV_A_EMEP);
        sb.append(", UV_B_EMEP=");
        sb.append(UV_B_EMEP);
        sb.append(", diffPAR_EMEP=");
        sb.append(diffPAR_EMEP);
        sb.append(", diffGLOB_EMEP=");
        sb.append(diffGLOB_EMEP);
        sb.append(", dirGLOB_EMEP=");
        sb.append(dirGLOB_EMEP);
        sb.append(", Net_EMEP=");
        sb.append(Net_EMEP);
        sb.append(", RGlob_EMEP=");
        sb.append(RGlob_EMEP);
        sb.append(", Glob_EMEP=");
        sb.append(Glob_EMEP);
        sb.append(", RPAR_EMEP=");
        sb.append(RPAR_EMEP);
        sb.append(", PAR_EMEP=");
        sb.append(PAR_EMEP);
        sb.append(", dirPAR_EMEP=");
        sb.append(dirPAR_EMEP);
        sb.append(", canIR_EMEP=");
        sb.append(canIR_EMEP);
        sb.append("}");

        return sb.toString();
    }

    @Override
    public Hydemeta toEntityModel() {
        HydemetaImpl hydemetaImpl = new HydemetaImpl();

        if (samptime == Long.MIN_VALUE) {
            hydemetaImpl.setSamptime(null);
        } else {
            hydemetaImpl.setSamptime(new Date(samptime));
        }

        hydemetaImpl.setUV_A(UV_A);
        hydemetaImpl.setUV_B(UV_B);
        hydemetaImpl.setDiffPAR(diffPAR);
        hydemetaImpl.setDiffGLOB(diffGLOB);
        hydemetaImpl.setDirGLOB(dirGLOB);
        hydemetaImpl.setNet(Net);
        hydemetaImpl.setRGlob(RGlob);
        hydemetaImpl.setGlob(Glob);
        hydemetaImpl.setRPAR(RPAR);
        hydemetaImpl.setPAR(PAR);
        hydemetaImpl.setDirPAR(dirPAR);
        hydemetaImpl.setCanIR(canIR);
        hydemetaImpl.setSkyIR(skyIR);
        hydemetaImpl.setPrecip(Precip);
        hydemetaImpl.setSWS(SWS);
        hydemetaImpl.setTd(Td);
        hydemetaImpl.setPamb0(Pamb0);
        hydemetaImpl.setT672(T672);
        hydemetaImpl.setT504(T504);
        hydemetaImpl.setT336(T336);
        hydemetaImpl.setT168(T168);
        hydemetaImpl.setT84(T84);
        hydemetaImpl.setT42(T42);
        hydemetaImpl.setWS672(WS672);
        hydemetaImpl.setWS504(WS504);
        hydemetaImpl.setWS336(WS336);
        hydemetaImpl.setWS168(WS168);
        hydemetaImpl.setWS84(WS84);
        hydemetaImpl.setWS42(WS42);
        hydemetaImpl.setWSU740(WSU740);
        hydemetaImpl.setWSU336(WSU336);
        hydemetaImpl.setWSU168(WSU168);
        hydemetaImpl.setWSU84(WSU84);
        hydemetaImpl.setWD(WD);
        hydemetaImpl.setWD504(WD504);
        hydemetaImpl.setWD336(WD336);
        hydemetaImpl.setWD168(WD168);
        hydemetaImpl.setWDU740(WDU740);
        hydemetaImpl.setWDU336(WDU336);
        hydemetaImpl.setWDU168(WDU168);
        hydemetaImpl.setWDU84(WDU84);
        hydemetaImpl.setNO672(NO672);
        hydemetaImpl.setNO504(NO504);
        hydemetaImpl.setNO336(NO336);
        hydemetaImpl.setNO168(NO168);
        hydemetaImpl.setNO84(NO84);
        hydemetaImpl.setNO42(NO42);
        hydemetaImpl.setNOx672(NOx672);
        hydemetaImpl.setNOx504(NOx504);
        hydemetaImpl.setNOx336(NOx336);
        hydemetaImpl.setNOx168(NOx168);
        hydemetaImpl.setNOx84(NOx84);
        hydemetaImpl.setNOx42(NOx42);
        hydemetaImpl.setO3672(O3672);
        hydemetaImpl.setO3504(O3504);
        hydemetaImpl.setO3336(O3336);
        hydemetaImpl.setO3168(O3168);
        hydemetaImpl.setO384(O384);
        hydemetaImpl.setO342(O342);
        hydemetaImpl.setSO2672(SO2672);
        hydemetaImpl.setSO2504(SO2504);
        hydemetaImpl.setSO2336(SO2336);
        hydemetaImpl.setSO2168(SO2168);
        hydemetaImpl.setSO284(SO284);
        hydemetaImpl.setSO242(SO242);
        hydemetaImpl.setH2O672(H2O672);
        hydemetaImpl.setH2O504(H2O504);
        hydemetaImpl.setH2O336(H2O336);
        hydemetaImpl.setH2O168(H2O168);
        hydemetaImpl.setH2O84(H2O84);
        hydemetaImpl.setH2O42(H2O42);
        hydemetaImpl.setCO2672(CO2672);
        hydemetaImpl.setCO2504(CO2504);
        hydemetaImpl.setCO2336(CO2336);
        hydemetaImpl.setCO2168(CO2168);
        hydemetaImpl.setCO284(CO284);
        hydemetaImpl.setCO242(CO242);
        hydemetaImpl.setH2S672(H2S672);
        hydemetaImpl.setH2S504(H2S504);
        hydemetaImpl.setH2S336(H2S336);
        hydemetaImpl.setH2S168(H2S168);
        hydemetaImpl.setH2S84(H2S84);
        hydemetaImpl.setH2S42(H2S42);
        hydemetaImpl.setRHIRGA672(RHIRGA672);
        hydemetaImpl.setRHIRGA504(RHIRGA504);
        hydemetaImpl.setRHIRGA336(RHIRGA336);
        hydemetaImpl.setRHIRGA168(RHIRGA168);
        hydemetaImpl.setRHIRGA84(RHIRGA84);
        hydemetaImpl.setRHIRGA42(RHIRGA42);
        hydemetaImpl.setCO672(CO672);
        hydemetaImpl.setCO504(CO504);
        hydemetaImpl.setCO336(CO336);
        hydemetaImpl.setCO168(CO168);
        hydemetaImpl.setCO84(CO84);
        hydemetaImpl.setCO42(CO42);
        hydemetaImpl.setRHTd(RHTd);
        hydemetaImpl.setPTG(PTG);
        hydemetaImpl.setVisibility(Visibility);
        hydemetaImpl.setVisibilitymin(Visibilitymin);
        hydemetaImpl.setVisibilitymax(Visibilitymax);
        hydemetaImpl.setPrecipint(Precipint);
        hydemetaImpl.setPrecipintmin(Precipintmin);
        hydemetaImpl.setPrecipintmax(Precipintmax);
        hydemetaImpl.setPrecipacc(Precipacc);
        hydemetaImpl.setSnowfallacc(Snowfallacc);
        hydemetaImpl.setWthcode(wthcode);
        hydemetaImpl.setWthcodemin(wthcodemin);
        hydemetaImpl.setWthcodemax(wthcodemax);
        hydemetaImpl.setTsoil_humus(tsoil_humus);
        hydemetaImpl.setTsoil_A(tsoil_A);
        hydemetaImpl.setTsoil_B1(tsoil_B1);
        hydemetaImpl.setTsoil_B2(tsoil_B2);
        hydemetaImpl.setTsoil_C1(tsoil_C1);
        hydemetaImpl.setH2OTd(H2OTd);
        hydemetaImpl.setCO2_storage_flux(CO2_storage_flux);
        hydemetaImpl.setWsoil_humus(wsoil_humus);
        hydemetaImpl.setWsoil_A(wsoil_A);
        hydemetaImpl.setWsoil_B1(wsoil_B1);
        hydemetaImpl.setWsoil_B2(wsoil_B2);
        hydemetaImpl.setWsoil_C1(wsoil_C1);
        hydemetaImpl.setLWin(LWin);
        hydemetaImpl.setLWout(LWout);
        hydemetaImpl.setPRI(PRI);
        hydemetaImpl.setNDVI(NDVI);
        hydemetaImpl.setBNDVI(BNDVI);
        hydemetaImpl.setCanPAR1(canPAR1);
        hydemetaImpl.setCanPAR2(canPAR2);
        hydemetaImpl.setCanPAR3(canPAR3);
        hydemetaImpl.setMaaPAR(maaPAR);
        hydemetaImpl.setMaaNet(maaNet);
        hydemetaImpl.setPAR2(PAR2);
        hydemetaImpl.setGlobmast(Globmast);
        hydemetaImpl.setWDU672(WDU672);
        hydemetaImpl.setWSU672(WSU672);
        hydemetaImpl.setRGlob125(RGlob125);
        hydemetaImpl.setCH4168(CH4168);
        hydemetaImpl.setCH4672(CH4672);
        hydemetaImpl.setCH41250(CH41250);
        hydemetaImpl.setT1250(T1250);
        hydemetaImpl.setWpsoil_A(wpsoil_A);
        hydemetaImpl.setWpsoil_B(wpsoil_B);
        hydemetaImpl.setRunoff1(runoff1);
        hydemetaImpl.setRunoff2(runoff2);
        hydemetaImpl.setDrainage1(drainage1);
        hydemetaImpl.setCO2icos168(CO2icos168);
        hydemetaImpl.setCO2icos672(CO2icos672);
        hydemetaImpl.setCO2icos1250(CO2icos1250);
        hydemetaImpl.setH2Oicos168(H2Oicos168);
        hydemetaImpl.setH2Oicos672(H2Oicos672);
        hydemetaImpl.setH2Oicos1250(H2Oicos1250);
        hydemetaImpl.setUV_A_EMEP(UV_A_EMEP);
        hydemetaImpl.setUV_B_EMEP(UV_B_EMEP);
        hydemetaImpl.setDiffPAR_EMEP(diffPAR_EMEP);
        hydemetaImpl.setDiffGLOB_EMEP(diffGLOB_EMEP);
        hydemetaImpl.setDirGLOB_EMEP(dirGLOB_EMEP);
        hydemetaImpl.setNet_EMEP(Net_EMEP);
        hydemetaImpl.setRGlob_EMEP(RGlob_EMEP);
        hydemetaImpl.setGlob_EMEP(Glob_EMEP);
        hydemetaImpl.setRPAR_EMEP(RPAR_EMEP);
        hydemetaImpl.setPAR_EMEP(PAR_EMEP);
        hydemetaImpl.setDirPAR_EMEP(dirPAR_EMEP);
        hydemetaImpl.setCanIR_EMEP(canIR_EMEP);

        hydemetaImpl.resetOriginalValues();

        return hydemetaImpl;
    }

    @Override
    public void readExternal(ObjectInput objectInput) throws IOException {
        samptime = objectInput.readLong();
        UV_A = objectInput.readFloat();
        UV_B = objectInput.readFloat();
        diffPAR = objectInput.readFloat();
        diffGLOB = objectInput.readFloat();
        dirGLOB = objectInput.readFloat();
        Net = objectInput.readFloat();
        RGlob = objectInput.readFloat();
        Glob = objectInput.readFloat();
        RPAR = objectInput.readFloat();
        PAR = objectInput.readFloat();
        dirPAR = objectInput.readFloat();
        canIR = objectInput.readFloat();
        skyIR = objectInput.readFloat();
        Precip = objectInput.readFloat();
        SWS = objectInput.readFloat();
        Td = objectInput.readFloat();
        Pamb0 = objectInput.readFloat();
        T672 = objectInput.readFloat();
        T504 = objectInput.readFloat();
        T336 = objectInput.readFloat();
        T168 = objectInput.readFloat();
        T84 = objectInput.readFloat();
        T42 = objectInput.readFloat();
        WS672 = objectInput.readFloat();
        WS504 = objectInput.readFloat();
        WS336 = objectInput.readFloat();
        WS168 = objectInput.readFloat();
        WS84 = objectInput.readFloat();
        WS42 = objectInput.readFloat();
        WSU740 = objectInput.readFloat();
        WSU336 = objectInput.readFloat();
        WSU168 = objectInput.readFloat();
        WSU84 = objectInput.readFloat();
        WD = objectInput.readFloat();
        WD504 = objectInput.readFloat();
        WD336 = objectInput.readFloat();
        WD168 = objectInput.readFloat();
        WDU740 = objectInput.readFloat();
        WDU336 = objectInput.readFloat();
        WDU168 = objectInput.readFloat();
        WDU84 = objectInput.readFloat();
        NO672 = objectInput.readFloat();
        NO504 = objectInput.readFloat();
        NO336 = objectInput.readFloat();
        NO168 = objectInput.readFloat();
        NO84 = objectInput.readFloat();
        NO42 = objectInput.readFloat();
        NOx672 = objectInput.readFloat();
        NOx504 = objectInput.readFloat();
        NOx336 = objectInput.readFloat();
        NOx168 = objectInput.readFloat();
        NOx84 = objectInput.readFloat();
        NOx42 = objectInput.readFloat();
        O3672 = objectInput.readFloat();
        O3504 = objectInput.readFloat();
        O3336 = objectInput.readFloat();
        O3168 = objectInput.readFloat();
        O384 = objectInput.readFloat();
        O342 = objectInput.readFloat();
        SO2672 = objectInput.readFloat();
        SO2504 = objectInput.readFloat();
        SO2336 = objectInput.readFloat();
        SO2168 = objectInput.readFloat();
        SO284 = objectInput.readFloat();
        SO242 = objectInput.readFloat();
        H2O672 = objectInput.readFloat();
        H2O504 = objectInput.readFloat();
        H2O336 = objectInput.readFloat();
        H2O168 = objectInput.readFloat();
        H2O84 = objectInput.readFloat();
        H2O42 = objectInput.readFloat();
        CO2672 = objectInput.readFloat();
        CO2504 = objectInput.readFloat();
        CO2336 = objectInput.readFloat();
        CO2168 = objectInput.readFloat();
        CO284 = objectInput.readFloat();
        CO242 = objectInput.readFloat();
        H2S672 = objectInput.readFloat();
        H2S504 = objectInput.readFloat();
        H2S336 = objectInput.readFloat();
        H2S168 = objectInput.readFloat();
        H2S84 = objectInput.readFloat();
        H2S42 = objectInput.readFloat();
        RHIRGA672 = objectInput.readFloat();
        RHIRGA504 = objectInput.readFloat();
        RHIRGA336 = objectInput.readFloat();
        RHIRGA168 = objectInput.readFloat();
        RHIRGA84 = objectInput.readFloat();
        RHIRGA42 = objectInput.readFloat();
        CO672 = objectInput.readFloat();
        CO504 = objectInput.readFloat();
        CO336 = objectInput.readFloat();
        CO168 = objectInput.readFloat();
        CO84 = objectInput.readFloat();
        CO42 = objectInput.readFloat();
        RHTd = objectInput.readFloat();
        PTG = objectInput.readFloat();
        Visibility = objectInput.readFloat();
        Visibilitymin = objectInput.readFloat();
        Visibilitymax = objectInput.readFloat();
        Precipint = objectInput.readFloat();
        Precipintmin = objectInput.readFloat();
        Precipintmax = objectInput.readFloat();
        Precipacc = objectInput.readFloat();
        Snowfallacc = objectInput.readFloat();
        wthcode = objectInput.readInt();
        wthcodemin = objectInput.readInt();
        wthcodemax = objectInput.readInt();
        tsoil_humus = objectInput.readFloat();
        tsoil_A = objectInput.readFloat();
        tsoil_B1 = objectInput.readFloat();
        tsoil_B2 = objectInput.readFloat();
        tsoil_C1 = objectInput.readFloat();
        H2OTd = objectInput.readFloat();
        CO2_storage_flux = objectInput.readFloat();
        wsoil_humus = objectInput.readFloat();
        wsoil_A = objectInput.readFloat();
        wsoil_B1 = objectInput.readFloat();
        wsoil_B2 = objectInput.readFloat();
        wsoil_C1 = objectInput.readFloat();
        LWin = objectInput.readFloat();
        LWout = objectInput.readFloat();
        PRI = objectInput.readFloat();
        NDVI = objectInput.readFloat();
        BNDVI = objectInput.readFloat();
        canPAR1 = objectInput.readFloat();
        canPAR2 = objectInput.readFloat();
        canPAR3 = objectInput.readFloat();
        maaPAR = objectInput.readFloat();
        maaNet = objectInput.readFloat();
        PAR2 = objectInput.readFloat();
        Globmast = objectInput.readFloat();
        WDU672 = objectInput.readFloat();
        WSU672 = objectInput.readFloat();
        RGlob125 = objectInput.readFloat();
        CH4168 = objectInput.readFloat();
        CH4672 = objectInput.readFloat();
        CH41250 = objectInput.readFloat();
        T1250 = objectInput.readFloat();
        wpsoil_A = objectInput.readFloat();
        wpsoil_B = objectInput.readFloat();
        runoff1 = objectInput.readFloat();
        runoff2 = objectInput.readFloat();
        drainage1 = objectInput.readFloat();
        CO2icos168 = objectInput.readFloat();
        CO2icos672 = objectInput.readFloat();
        CO2icos1250 = objectInput.readFloat();
        H2Oicos168 = objectInput.readFloat();
        H2Oicos672 = objectInput.readFloat();
        H2Oicos1250 = objectInput.readFloat();
        UV_A_EMEP = objectInput.readInt();
        UV_B_EMEP = objectInput.readInt();
        diffPAR_EMEP = objectInput.readInt();
        diffGLOB_EMEP = objectInput.readInt();
        dirGLOB_EMEP = objectInput.readInt();
        Net_EMEP = objectInput.readInt();
        RGlob_EMEP = objectInput.readInt();
        Glob_EMEP = objectInput.readInt();
        RPAR_EMEP = objectInput.readInt();
        PAR_EMEP = objectInput.readInt();
        dirPAR_EMEP = objectInput.readInt();
        canIR_EMEP = objectInput.readInt();
    }

    @Override
    public void writeExternal(ObjectOutput objectOutput)
        throws IOException {
        objectOutput.writeLong(samptime);
        objectOutput.writeFloat(UV_A);
        objectOutput.writeFloat(UV_B);
        objectOutput.writeFloat(diffPAR);
        objectOutput.writeFloat(diffGLOB);
        objectOutput.writeFloat(dirGLOB);
        objectOutput.writeFloat(Net);
        objectOutput.writeFloat(RGlob);
        objectOutput.writeFloat(Glob);
        objectOutput.writeFloat(RPAR);
        objectOutput.writeFloat(PAR);
        objectOutput.writeFloat(dirPAR);
        objectOutput.writeFloat(canIR);
        objectOutput.writeFloat(skyIR);
        objectOutput.writeFloat(Precip);
        objectOutput.writeFloat(SWS);
        objectOutput.writeFloat(Td);
        objectOutput.writeFloat(Pamb0);
        objectOutput.writeFloat(T672);
        objectOutput.writeFloat(T504);
        objectOutput.writeFloat(T336);
        objectOutput.writeFloat(T168);
        objectOutput.writeFloat(T84);
        objectOutput.writeFloat(T42);
        objectOutput.writeFloat(WS672);
        objectOutput.writeFloat(WS504);
        objectOutput.writeFloat(WS336);
        objectOutput.writeFloat(WS168);
        objectOutput.writeFloat(WS84);
        objectOutput.writeFloat(WS42);
        objectOutput.writeFloat(WSU740);
        objectOutput.writeFloat(WSU336);
        objectOutput.writeFloat(WSU168);
        objectOutput.writeFloat(WSU84);
        objectOutput.writeFloat(WD);
        objectOutput.writeFloat(WD504);
        objectOutput.writeFloat(WD336);
        objectOutput.writeFloat(WD168);
        objectOutput.writeFloat(WDU740);
        objectOutput.writeFloat(WDU336);
        objectOutput.writeFloat(WDU168);
        objectOutput.writeFloat(WDU84);
        objectOutput.writeFloat(NO672);
        objectOutput.writeFloat(NO504);
        objectOutput.writeFloat(NO336);
        objectOutput.writeFloat(NO168);
        objectOutput.writeFloat(NO84);
        objectOutput.writeFloat(NO42);
        objectOutput.writeFloat(NOx672);
        objectOutput.writeFloat(NOx504);
        objectOutput.writeFloat(NOx336);
        objectOutput.writeFloat(NOx168);
        objectOutput.writeFloat(NOx84);
        objectOutput.writeFloat(NOx42);
        objectOutput.writeFloat(O3672);
        objectOutput.writeFloat(O3504);
        objectOutput.writeFloat(O3336);
        objectOutput.writeFloat(O3168);
        objectOutput.writeFloat(O384);
        objectOutput.writeFloat(O342);
        objectOutput.writeFloat(SO2672);
        objectOutput.writeFloat(SO2504);
        objectOutput.writeFloat(SO2336);
        objectOutput.writeFloat(SO2168);
        objectOutput.writeFloat(SO284);
        objectOutput.writeFloat(SO242);
        objectOutput.writeFloat(H2O672);
        objectOutput.writeFloat(H2O504);
        objectOutput.writeFloat(H2O336);
        objectOutput.writeFloat(H2O168);
        objectOutput.writeFloat(H2O84);
        objectOutput.writeFloat(H2O42);
        objectOutput.writeFloat(CO2672);
        objectOutput.writeFloat(CO2504);
        objectOutput.writeFloat(CO2336);
        objectOutput.writeFloat(CO2168);
        objectOutput.writeFloat(CO284);
        objectOutput.writeFloat(CO242);
        objectOutput.writeFloat(H2S672);
        objectOutput.writeFloat(H2S504);
        objectOutput.writeFloat(H2S336);
        objectOutput.writeFloat(H2S168);
        objectOutput.writeFloat(H2S84);
        objectOutput.writeFloat(H2S42);
        objectOutput.writeFloat(RHIRGA672);
        objectOutput.writeFloat(RHIRGA504);
        objectOutput.writeFloat(RHIRGA336);
        objectOutput.writeFloat(RHIRGA168);
        objectOutput.writeFloat(RHIRGA84);
        objectOutput.writeFloat(RHIRGA42);
        objectOutput.writeFloat(CO672);
        objectOutput.writeFloat(CO504);
        objectOutput.writeFloat(CO336);
        objectOutput.writeFloat(CO168);
        objectOutput.writeFloat(CO84);
        objectOutput.writeFloat(CO42);
        objectOutput.writeFloat(RHTd);
        objectOutput.writeFloat(PTG);
        objectOutput.writeFloat(Visibility);
        objectOutput.writeFloat(Visibilitymin);
        objectOutput.writeFloat(Visibilitymax);
        objectOutput.writeFloat(Precipint);
        objectOutput.writeFloat(Precipintmin);
        objectOutput.writeFloat(Precipintmax);
        objectOutput.writeFloat(Precipacc);
        objectOutput.writeFloat(Snowfallacc);
        objectOutput.writeInt(wthcode);
        objectOutput.writeInt(wthcodemin);
        objectOutput.writeInt(wthcodemax);
        objectOutput.writeFloat(tsoil_humus);
        objectOutput.writeFloat(tsoil_A);
        objectOutput.writeFloat(tsoil_B1);
        objectOutput.writeFloat(tsoil_B2);
        objectOutput.writeFloat(tsoil_C1);
        objectOutput.writeFloat(H2OTd);
        objectOutput.writeFloat(CO2_storage_flux);
        objectOutput.writeFloat(wsoil_humus);
        objectOutput.writeFloat(wsoil_A);
        objectOutput.writeFloat(wsoil_B1);
        objectOutput.writeFloat(wsoil_B2);
        objectOutput.writeFloat(wsoil_C1);
        objectOutput.writeFloat(LWin);
        objectOutput.writeFloat(LWout);
        objectOutput.writeFloat(PRI);
        objectOutput.writeFloat(NDVI);
        objectOutput.writeFloat(BNDVI);
        objectOutput.writeFloat(canPAR1);
        objectOutput.writeFloat(canPAR2);
        objectOutput.writeFloat(canPAR3);
        objectOutput.writeFloat(maaPAR);
        objectOutput.writeFloat(maaNet);
        objectOutput.writeFloat(PAR2);
        objectOutput.writeFloat(Globmast);
        objectOutput.writeFloat(WDU672);
        objectOutput.writeFloat(WSU672);
        objectOutput.writeFloat(RGlob125);
        objectOutput.writeFloat(CH4168);
        objectOutput.writeFloat(CH4672);
        objectOutput.writeFloat(CH41250);
        objectOutput.writeFloat(T1250);
        objectOutput.writeFloat(wpsoil_A);
        objectOutput.writeFloat(wpsoil_B);
        objectOutput.writeFloat(runoff1);
        objectOutput.writeFloat(runoff2);
        objectOutput.writeFloat(drainage1);
        objectOutput.writeFloat(CO2icos168);
        objectOutput.writeFloat(CO2icos672);
        objectOutput.writeFloat(CO2icos1250);
        objectOutput.writeFloat(H2Oicos168);
        objectOutput.writeFloat(H2Oicos672);
        objectOutput.writeFloat(H2Oicos1250);
        objectOutput.writeInt(UV_A_EMEP);
        objectOutput.writeInt(UV_B_EMEP);
        objectOutput.writeInt(diffPAR_EMEP);
        objectOutput.writeInt(diffGLOB_EMEP);
        objectOutput.writeInt(dirGLOB_EMEP);
        objectOutput.writeInt(Net_EMEP);
        objectOutput.writeInt(RGlob_EMEP);
        objectOutput.writeInt(Glob_EMEP);
        objectOutput.writeInt(RPAR_EMEP);
        objectOutput.writeInt(PAR_EMEP);
        objectOutput.writeInt(dirPAR_EMEP);
        objectOutput.writeInt(canIR_EMEP);
    }
}
