package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;

import fi.csc.smear.db.model.Hyy_eddysub;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import java.util.Date;

/**
 * The cache model class for representing Hyy_eddysub in entity cache.
 *
 * @author pj
 * @see Hyy_eddysub
 * @generated
 */
public class Hyy_eddysubCacheModel implements CacheModel<Hyy_eddysub>,
    Externalizable {
    public long samptime;
    public float H_subm;
    public int H_subm_EMEP;
    public int Qc_H_subm;
    public int Qc_H_subm_EMEP;
    public float LE_subm;
    public int LE_subm_EMEP;
    public int Qc_LE_subm;
    public int Qc_LE_subm_EMEP;
    public float E_subm;
    public int E_subm_EMEP;
    public int Qc_E_subm;
    public int Qc_E_subm_EMEP;
    public float F_c_subm;
    public int F_c_subm_EMEP;
    public int Qc_F_c_subm;
    public int Qc_F_c_subm_EMEP;
    public float tau_subm;
    public int tau_subm_EMEP;
    public int Qc_tau_subm;
    public int Qc_tau_subm_EMEP;
    public float u_star_subm;
    public int u_star_subm_EMEP;
    public float MO_length_subm;
    public int MO_length_subm_EMEP;
    public float std_u_subm;
    public int std_u_subm_EMEP;
    public float std_v_subm;
    public int std_v_subm_EMEP;
    public float std_w_subm;
    public int std_w_subm_EMEP;
    public float std_t_subm;
    public int std_t_subm_EMEP;
    public float std_c_subm;
    public int std_c_subm_EMEP;
    public float std_h_subm;
    public int std_h_subm_EMEP;
    public float av_u_subm;
    public int av_u_subm_EMEP;
    public float av_v_subm;
    public int av_v_subm_EMEP;
    public float av_w_subm;
    public int av_w_subm_EMEP;
    public float av_t_subm;
    public int av_t_subm_EMEP;
    public float av_c_subm;
    public int av_c_subm_EMEP;
    public float av_h_subm;
    public int av_h_subm_EMEP;
    public float U_subm;
    public int U_subm_EMEP;
    public float wind_dir_subm;
    public int wind_dir_subm_EMEP;
    public float eta_subm;
    public int eta_subm_EMEP;
    public float theta_subm;
    public int theta_subm_EMEP;
    public float beta_subm;
    public int beta_subm_EMEP;
    public float c_lag_subm;
    public int c_lag_subm_EMEP;
    public float h_lag_subm;
    public int h_lag_subm_EMEP;
    public float err_packet_subm;
    public int err_packet_subm_EMEP;
    public float licor_t_std_subm;
    public int licor_t_std_subm_EMEP;
    public float licor_t_av_subm;
    public int licor_t_av_subm_EMEP;
    public float licor_p_std_subm;
    public int licor_p_std_subm_EMEP;
    public float licor_p_av_subm;
    public int licor_p_av_subm_EMEP;
    public float av_O3_subm;
    public int av_O3_subm_EMEP;
    public float std_O3_subm;
    public int std_O3_subm_EMEP;
    public float O3_lag_subm;
    public int O3_lag_subm_EMEP;
    public float F_O3_subm;
    public int F_O3_subm_EMEP;
    public int Qc_F_O3_subm;
    public int Qc_F_O3_subm_EMEP;

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(167);

        sb.append("{samptime=");
        sb.append(samptime);
        sb.append(", H_subm=");
        sb.append(H_subm);
        sb.append(", H_subm_EMEP=");
        sb.append(H_subm_EMEP);
        sb.append(", Qc_H_subm=");
        sb.append(Qc_H_subm);
        sb.append(", Qc_H_subm_EMEP=");
        sb.append(Qc_H_subm_EMEP);
        sb.append(", LE_subm=");
        sb.append(LE_subm);
        sb.append(", LE_subm_EMEP=");
        sb.append(LE_subm_EMEP);
        sb.append(", Qc_LE_subm=");
        sb.append(Qc_LE_subm);
        sb.append(", Qc_LE_subm_EMEP=");
        sb.append(Qc_LE_subm_EMEP);
        sb.append(", E_subm=");
        sb.append(E_subm);
        sb.append(", E_subm_EMEP=");
        sb.append(E_subm_EMEP);
        sb.append(", Qc_E_subm=");
        sb.append(Qc_E_subm);
        sb.append(", Qc_E_subm_EMEP=");
        sb.append(Qc_E_subm_EMEP);
        sb.append(", F_c_subm=");
        sb.append(F_c_subm);
        sb.append(", F_c_subm_EMEP=");
        sb.append(F_c_subm_EMEP);
        sb.append(", Qc_F_c_subm=");
        sb.append(Qc_F_c_subm);
        sb.append(", Qc_F_c_subm_EMEP=");
        sb.append(Qc_F_c_subm_EMEP);
        sb.append(", tau_subm=");
        sb.append(tau_subm);
        sb.append(", tau_subm_EMEP=");
        sb.append(tau_subm_EMEP);
        sb.append(", Qc_tau_subm=");
        sb.append(Qc_tau_subm);
        sb.append(", Qc_tau_subm_EMEP=");
        sb.append(Qc_tau_subm_EMEP);
        sb.append(", u_star_subm=");
        sb.append(u_star_subm);
        sb.append(", u_star_subm_EMEP=");
        sb.append(u_star_subm_EMEP);
        sb.append(", MO_length_subm=");
        sb.append(MO_length_subm);
        sb.append(", MO_length_subm_EMEP=");
        sb.append(MO_length_subm_EMEP);
        sb.append(", std_u_subm=");
        sb.append(std_u_subm);
        sb.append(", std_u_subm_EMEP=");
        sb.append(std_u_subm_EMEP);
        sb.append(", std_v_subm=");
        sb.append(std_v_subm);
        sb.append(", std_v_subm_EMEP=");
        sb.append(std_v_subm_EMEP);
        sb.append(", std_w_subm=");
        sb.append(std_w_subm);
        sb.append(", std_w_subm_EMEP=");
        sb.append(std_w_subm_EMEP);
        sb.append(", std_t_subm=");
        sb.append(std_t_subm);
        sb.append(", std_t_subm_EMEP=");
        sb.append(std_t_subm_EMEP);
        sb.append(", std_c_subm=");
        sb.append(std_c_subm);
        sb.append(", std_c_subm_EMEP=");
        sb.append(std_c_subm_EMEP);
        sb.append(", std_h_subm=");
        sb.append(std_h_subm);
        sb.append(", std_h_subm_EMEP=");
        sb.append(std_h_subm_EMEP);
        sb.append(", av_u_subm=");
        sb.append(av_u_subm);
        sb.append(", av_u_subm_EMEP=");
        sb.append(av_u_subm_EMEP);
        sb.append(", av_v_subm=");
        sb.append(av_v_subm);
        sb.append(", av_v_subm_EMEP=");
        sb.append(av_v_subm_EMEP);
        sb.append(", av_w_subm=");
        sb.append(av_w_subm);
        sb.append(", av_w_subm_EMEP=");
        sb.append(av_w_subm_EMEP);
        sb.append(", av_t_subm=");
        sb.append(av_t_subm);
        sb.append(", av_t_subm_EMEP=");
        sb.append(av_t_subm_EMEP);
        sb.append(", av_c_subm=");
        sb.append(av_c_subm);
        sb.append(", av_c_subm_EMEP=");
        sb.append(av_c_subm_EMEP);
        sb.append(", av_h_subm=");
        sb.append(av_h_subm);
        sb.append(", av_h_subm_EMEP=");
        sb.append(av_h_subm_EMEP);
        sb.append(", U_subm=");
        sb.append(U_subm);
        sb.append(", U_subm_EMEP=");
        sb.append(U_subm_EMEP);
        sb.append(", wind_dir_subm=");
        sb.append(wind_dir_subm);
        sb.append(", wind_dir_subm_EMEP=");
        sb.append(wind_dir_subm_EMEP);
        sb.append(", eta_subm=");
        sb.append(eta_subm);
        sb.append(", eta_subm_EMEP=");
        sb.append(eta_subm_EMEP);
        sb.append(", theta_subm=");
        sb.append(theta_subm);
        sb.append(", theta_subm_EMEP=");
        sb.append(theta_subm_EMEP);
        sb.append(", beta_subm=");
        sb.append(beta_subm);
        sb.append(", beta_subm_EMEP=");
        sb.append(beta_subm_EMEP);
        sb.append(", c_lag_subm=");
        sb.append(c_lag_subm);
        sb.append(", c_lag_subm_EMEP=");
        sb.append(c_lag_subm_EMEP);
        sb.append(", h_lag_subm=");
        sb.append(h_lag_subm);
        sb.append(", h_lag_subm_EMEP=");
        sb.append(h_lag_subm_EMEP);
        sb.append(", err_packet_subm=");
        sb.append(err_packet_subm);
        sb.append(", err_packet_subm_EMEP=");
        sb.append(err_packet_subm_EMEP);
        sb.append(", licor_t_std_subm=");
        sb.append(licor_t_std_subm);
        sb.append(", licor_t_std_subm_EMEP=");
        sb.append(licor_t_std_subm_EMEP);
        sb.append(", licor_t_av_subm=");
        sb.append(licor_t_av_subm);
        sb.append(", licor_t_av_subm_EMEP=");
        sb.append(licor_t_av_subm_EMEP);
        sb.append(", licor_p_std_subm=");
        sb.append(licor_p_std_subm);
        sb.append(", licor_p_std_subm_EMEP=");
        sb.append(licor_p_std_subm_EMEP);
        sb.append(", licor_p_av_subm=");
        sb.append(licor_p_av_subm);
        sb.append(", licor_p_av_subm_EMEP=");
        sb.append(licor_p_av_subm_EMEP);
        sb.append(", av_O3_subm=");
        sb.append(av_O3_subm);
        sb.append(", av_O3_subm_EMEP=");
        sb.append(av_O3_subm_EMEP);
        sb.append(", std_O3_subm=");
        sb.append(std_O3_subm);
        sb.append(", std_O3_subm_EMEP=");
        sb.append(std_O3_subm_EMEP);
        sb.append(", O3_lag_subm=");
        sb.append(O3_lag_subm);
        sb.append(", O3_lag_subm_EMEP=");
        sb.append(O3_lag_subm_EMEP);
        sb.append(", F_O3_subm=");
        sb.append(F_O3_subm);
        sb.append(", F_O3_subm_EMEP=");
        sb.append(F_O3_subm_EMEP);
        sb.append(", Qc_F_O3_subm=");
        sb.append(Qc_F_O3_subm);
        sb.append(", Qc_F_O3_subm_EMEP=");
        sb.append(Qc_F_O3_subm_EMEP);
        sb.append("}");

        return sb.toString();
    }

    @Override
    public Hyy_eddysub toEntityModel() {
        Hyy_eddysubImpl hyy_eddysubImpl = new Hyy_eddysubImpl();

        if (samptime == Long.MIN_VALUE) {
            hyy_eddysubImpl.setSamptime(null);
        } else {
            hyy_eddysubImpl.setSamptime(new Date(samptime));
        }

        hyy_eddysubImpl.setH_subm(H_subm);
        hyy_eddysubImpl.setH_subm_EMEP(H_subm_EMEP);
        hyy_eddysubImpl.setQc_H_subm(Qc_H_subm);
        hyy_eddysubImpl.setQc_H_subm_EMEP(Qc_H_subm_EMEP);
        hyy_eddysubImpl.setLE_subm(LE_subm);
        hyy_eddysubImpl.setLE_subm_EMEP(LE_subm_EMEP);
        hyy_eddysubImpl.setQc_LE_subm(Qc_LE_subm);
        hyy_eddysubImpl.setQc_LE_subm_EMEP(Qc_LE_subm_EMEP);
        hyy_eddysubImpl.setE_subm(E_subm);
        hyy_eddysubImpl.setE_subm_EMEP(E_subm_EMEP);
        hyy_eddysubImpl.setQc_E_subm(Qc_E_subm);
        hyy_eddysubImpl.setQc_E_subm_EMEP(Qc_E_subm_EMEP);
        hyy_eddysubImpl.setF_c_subm(F_c_subm);
        hyy_eddysubImpl.setF_c_subm_EMEP(F_c_subm_EMEP);
        hyy_eddysubImpl.setQc_F_c_subm(Qc_F_c_subm);
        hyy_eddysubImpl.setQc_F_c_subm_EMEP(Qc_F_c_subm_EMEP);
        hyy_eddysubImpl.setTau_subm(tau_subm);
        hyy_eddysubImpl.setTau_subm_EMEP(tau_subm_EMEP);
        hyy_eddysubImpl.setQc_tau_subm(Qc_tau_subm);
        hyy_eddysubImpl.setQc_tau_subm_EMEP(Qc_tau_subm_EMEP);
        hyy_eddysubImpl.setU_star_subm(u_star_subm);
        hyy_eddysubImpl.setU_star_subm_EMEP(u_star_subm_EMEP);
        hyy_eddysubImpl.setMO_length_subm(MO_length_subm);
        hyy_eddysubImpl.setMO_length_subm_EMEP(MO_length_subm_EMEP);
        hyy_eddysubImpl.setStd_u_subm(std_u_subm);
        hyy_eddysubImpl.setStd_u_subm_EMEP(std_u_subm_EMEP);
        hyy_eddysubImpl.setStd_v_subm(std_v_subm);
        hyy_eddysubImpl.setStd_v_subm_EMEP(std_v_subm_EMEP);
        hyy_eddysubImpl.setStd_w_subm(std_w_subm);
        hyy_eddysubImpl.setStd_w_subm_EMEP(std_w_subm_EMEP);
        hyy_eddysubImpl.setStd_t_subm(std_t_subm);
        hyy_eddysubImpl.setStd_t_subm_EMEP(std_t_subm_EMEP);
        hyy_eddysubImpl.setStd_c_subm(std_c_subm);
        hyy_eddysubImpl.setStd_c_subm_EMEP(std_c_subm_EMEP);
        hyy_eddysubImpl.setStd_h_subm(std_h_subm);
        hyy_eddysubImpl.setStd_h_subm_EMEP(std_h_subm_EMEP);
        hyy_eddysubImpl.setAv_u_subm(av_u_subm);
        hyy_eddysubImpl.setAv_u_subm_EMEP(av_u_subm_EMEP);
        hyy_eddysubImpl.setAv_v_subm(av_v_subm);
        hyy_eddysubImpl.setAv_v_subm_EMEP(av_v_subm_EMEP);
        hyy_eddysubImpl.setAv_w_subm(av_w_subm);
        hyy_eddysubImpl.setAv_w_subm_EMEP(av_w_subm_EMEP);
        hyy_eddysubImpl.setAv_t_subm(av_t_subm);
        hyy_eddysubImpl.setAv_t_subm_EMEP(av_t_subm_EMEP);
        hyy_eddysubImpl.setAv_c_subm(av_c_subm);
        hyy_eddysubImpl.setAv_c_subm_EMEP(av_c_subm_EMEP);
        hyy_eddysubImpl.setAv_h_subm(av_h_subm);
        hyy_eddysubImpl.setAv_h_subm_EMEP(av_h_subm_EMEP);
        hyy_eddysubImpl.setU_subm(U_subm);
        hyy_eddysubImpl.setU_subm_EMEP(U_subm_EMEP);
        hyy_eddysubImpl.setWind_dir_subm(wind_dir_subm);
        hyy_eddysubImpl.setWind_dir_subm_EMEP(wind_dir_subm_EMEP);
        hyy_eddysubImpl.setEta_subm(eta_subm);
        hyy_eddysubImpl.setEta_subm_EMEP(eta_subm_EMEP);
        hyy_eddysubImpl.setTheta_subm(theta_subm);
        hyy_eddysubImpl.setTheta_subm_EMEP(theta_subm_EMEP);
        hyy_eddysubImpl.setBeta_subm(beta_subm);
        hyy_eddysubImpl.setBeta_subm_EMEP(beta_subm_EMEP);
        hyy_eddysubImpl.setC_lag_subm(c_lag_subm);
        hyy_eddysubImpl.setC_lag_subm_EMEP(c_lag_subm_EMEP);
        hyy_eddysubImpl.setH_lag_subm(h_lag_subm);
        hyy_eddysubImpl.setH_lag_subm_EMEP(h_lag_subm_EMEP);
        hyy_eddysubImpl.setErr_packet_subm(err_packet_subm);
        hyy_eddysubImpl.setErr_packet_subm_EMEP(err_packet_subm_EMEP);
        hyy_eddysubImpl.setLicor_t_std_subm(licor_t_std_subm);
        hyy_eddysubImpl.setLicor_t_std_subm_EMEP(licor_t_std_subm_EMEP);
        hyy_eddysubImpl.setLicor_t_av_subm(licor_t_av_subm);
        hyy_eddysubImpl.setLicor_t_av_subm_EMEP(licor_t_av_subm_EMEP);
        hyy_eddysubImpl.setLicor_p_std_subm(licor_p_std_subm);
        hyy_eddysubImpl.setLicor_p_std_subm_EMEP(licor_p_std_subm_EMEP);
        hyy_eddysubImpl.setLicor_p_av_subm(licor_p_av_subm);
        hyy_eddysubImpl.setLicor_p_av_subm_EMEP(licor_p_av_subm_EMEP);
        hyy_eddysubImpl.setAv_O3_subm(av_O3_subm);
        hyy_eddysubImpl.setAv_O3_subm_EMEP(av_O3_subm_EMEP);
        hyy_eddysubImpl.setStd_O3_subm(std_O3_subm);
        hyy_eddysubImpl.setStd_O3_subm_EMEP(std_O3_subm_EMEP);
        hyy_eddysubImpl.setO3_lag_subm(O3_lag_subm);
        hyy_eddysubImpl.setO3_lag_subm_EMEP(O3_lag_subm_EMEP);
        hyy_eddysubImpl.setF_O3_subm(F_O3_subm);
        hyy_eddysubImpl.setF_O3_subm_EMEP(F_O3_subm_EMEP);
        hyy_eddysubImpl.setQc_F_O3_subm(Qc_F_O3_subm);
        hyy_eddysubImpl.setQc_F_O3_subm_EMEP(Qc_F_O3_subm_EMEP);

        hyy_eddysubImpl.resetOriginalValues();

        return hyy_eddysubImpl;
    }

    @Override
    public void readExternal(ObjectInput objectInput) throws IOException {
        samptime = objectInput.readLong();
        H_subm = objectInput.readFloat();
        H_subm_EMEP = objectInput.readInt();
        Qc_H_subm = objectInput.readInt();
        Qc_H_subm_EMEP = objectInput.readInt();
        LE_subm = objectInput.readFloat();
        LE_subm_EMEP = objectInput.readInt();
        Qc_LE_subm = objectInput.readInt();
        Qc_LE_subm_EMEP = objectInput.readInt();
        E_subm = objectInput.readFloat();
        E_subm_EMEP = objectInput.readInt();
        Qc_E_subm = objectInput.readInt();
        Qc_E_subm_EMEP = objectInput.readInt();
        F_c_subm = objectInput.readFloat();
        F_c_subm_EMEP = objectInput.readInt();
        Qc_F_c_subm = objectInput.readInt();
        Qc_F_c_subm_EMEP = objectInput.readInt();
        tau_subm = objectInput.readFloat();
        tau_subm_EMEP = objectInput.readInt();
        Qc_tau_subm = objectInput.readInt();
        Qc_tau_subm_EMEP = objectInput.readInt();
        u_star_subm = objectInput.readFloat();
        u_star_subm_EMEP = objectInput.readInt();
        MO_length_subm = objectInput.readFloat();
        MO_length_subm_EMEP = objectInput.readInt();
        std_u_subm = objectInput.readFloat();
        std_u_subm_EMEP = objectInput.readInt();
        std_v_subm = objectInput.readFloat();
        std_v_subm_EMEP = objectInput.readInt();
        std_w_subm = objectInput.readFloat();
        std_w_subm_EMEP = objectInput.readInt();
        std_t_subm = objectInput.readFloat();
        std_t_subm_EMEP = objectInput.readInt();
        std_c_subm = objectInput.readFloat();
        std_c_subm_EMEP = objectInput.readInt();
        std_h_subm = objectInput.readFloat();
        std_h_subm_EMEP = objectInput.readInt();
        av_u_subm = objectInput.readFloat();
        av_u_subm_EMEP = objectInput.readInt();
        av_v_subm = objectInput.readFloat();
        av_v_subm_EMEP = objectInput.readInt();
        av_w_subm = objectInput.readFloat();
        av_w_subm_EMEP = objectInput.readInt();
        av_t_subm = objectInput.readFloat();
        av_t_subm_EMEP = objectInput.readInt();
        av_c_subm = objectInput.readFloat();
        av_c_subm_EMEP = objectInput.readInt();
        av_h_subm = objectInput.readFloat();
        av_h_subm_EMEP = objectInput.readInt();
        U_subm = objectInput.readFloat();
        U_subm_EMEP = objectInput.readInt();
        wind_dir_subm = objectInput.readFloat();
        wind_dir_subm_EMEP = objectInput.readInt();
        eta_subm = objectInput.readFloat();
        eta_subm_EMEP = objectInput.readInt();
        theta_subm = objectInput.readFloat();
        theta_subm_EMEP = objectInput.readInt();
        beta_subm = objectInput.readFloat();
        beta_subm_EMEP = objectInput.readInt();
        c_lag_subm = objectInput.readFloat();
        c_lag_subm_EMEP = objectInput.readInt();
        h_lag_subm = objectInput.readFloat();
        h_lag_subm_EMEP = objectInput.readInt();
        err_packet_subm = objectInput.readFloat();
        err_packet_subm_EMEP = objectInput.readInt();
        licor_t_std_subm = objectInput.readFloat();
        licor_t_std_subm_EMEP = objectInput.readInt();
        licor_t_av_subm = objectInput.readFloat();
        licor_t_av_subm_EMEP = objectInput.readInt();
        licor_p_std_subm = objectInput.readFloat();
        licor_p_std_subm_EMEP = objectInput.readInt();
        licor_p_av_subm = objectInput.readFloat();
        licor_p_av_subm_EMEP = objectInput.readInt();
        av_O3_subm = objectInput.readFloat();
        av_O3_subm_EMEP = objectInput.readInt();
        std_O3_subm = objectInput.readFloat();
        std_O3_subm_EMEP = objectInput.readInt();
        O3_lag_subm = objectInput.readFloat();
        O3_lag_subm_EMEP = objectInput.readInt();
        F_O3_subm = objectInput.readFloat();
        F_O3_subm_EMEP = objectInput.readInt();
        Qc_F_O3_subm = objectInput.readInt();
        Qc_F_O3_subm_EMEP = objectInput.readInt();
    }

    @Override
    public void writeExternal(ObjectOutput objectOutput)
        throws IOException {
        objectOutput.writeLong(samptime);
        objectOutput.writeFloat(H_subm);
        objectOutput.writeInt(H_subm_EMEP);
        objectOutput.writeInt(Qc_H_subm);
        objectOutput.writeInt(Qc_H_subm_EMEP);
        objectOutput.writeFloat(LE_subm);
        objectOutput.writeInt(LE_subm_EMEP);
        objectOutput.writeInt(Qc_LE_subm);
        objectOutput.writeInt(Qc_LE_subm_EMEP);
        objectOutput.writeFloat(E_subm);
        objectOutput.writeInt(E_subm_EMEP);
        objectOutput.writeInt(Qc_E_subm);
        objectOutput.writeInt(Qc_E_subm_EMEP);
        objectOutput.writeFloat(F_c_subm);
        objectOutput.writeInt(F_c_subm_EMEP);
        objectOutput.writeInt(Qc_F_c_subm);
        objectOutput.writeInt(Qc_F_c_subm_EMEP);
        objectOutput.writeFloat(tau_subm);
        objectOutput.writeInt(tau_subm_EMEP);
        objectOutput.writeInt(Qc_tau_subm);
        objectOutput.writeInt(Qc_tau_subm_EMEP);
        objectOutput.writeFloat(u_star_subm);
        objectOutput.writeInt(u_star_subm_EMEP);
        objectOutput.writeFloat(MO_length_subm);
        objectOutput.writeInt(MO_length_subm_EMEP);
        objectOutput.writeFloat(std_u_subm);
        objectOutput.writeInt(std_u_subm_EMEP);
        objectOutput.writeFloat(std_v_subm);
        objectOutput.writeInt(std_v_subm_EMEP);
        objectOutput.writeFloat(std_w_subm);
        objectOutput.writeInt(std_w_subm_EMEP);
        objectOutput.writeFloat(std_t_subm);
        objectOutput.writeInt(std_t_subm_EMEP);
        objectOutput.writeFloat(std_c_subm);
        objectOutput.writeInt(std_c_subm_EMEP);
        objectOutput.writeFloat(std_h_subm);
        objectOutput.writeInt(std_h_subm_EMEP);
        objectOutput.writeFloat(av_u_subm);
        objectOutput.writeInt(av_u_subm_EMEP);
        objectOutput.writeFloat(av_v_subm);
        objectOutput.writeInt(av_v_subm_EMEP);
        objectOutput.writeFloat(av_w_subm);
        objectOutput.writeInt(av_w_subm_EMEP);
        objectOutput.writeFloat(av_t_subm);
        objectOutput.writeInt(av_t_subm_EMEP);
        objectOutput.writeFloat(av_c_subm);
        objectOutput.writeInt(av_c_subm_EMEP);
        objectOutput.writeFloat(av_h_subm);
        objectOutput.writeInt(av_h_subm_EMEP);
        objectOutput.writeFloat(U_subm);
        objectOutput.writeInt(U_subm_EMEP);
        objectOutput.writeFloat(wind_dir_subm);
        objectOutput.writeInt(wind_dir_subm_EMEP);
        objectOutput.writeFloat(eta_subm);
        objectOutput.writeInt(eta_subm_EMEP);
        objectOutput.writeFloat(theta_subm);
        objectOutput.writeInt(theta_subm_EMEP);
        objectOutput.writeFloat(beta_subm);
        objectOutput.writeInt(beta_subm_EMEP);
        objectOutput.writeFloat(c_lag_subm);
        objectOutput.writeInt(c_lag_subm_EMEP);
        objectOutput.writeFloat(h_lag_subm);
        objectOutput.writeInt(h_lag_subm_EMEP);
        objectOutput.writeFloat(err_packet_subm);
        objectOutput.writeInt(err_packet_subm_EMEP);
        objectOutput.writeFloat(licor_t_std_subm);
        objectOutput.writeInt(licor_t_std_subm_EMEP);
        objectOutput.writeFloat(licor_t_av_subm);
        objectOutput.writeInt(licor_t_av_subm_EMEP);
        objectOutput.writeFloat(licor_p_std_subm);
        objectOutput.writeInt(licor_p_std_subm_EMEP);
        objectOutput.writeFloat(licor_p_av_subm);
        objectOutput.writeInt(licor_p_av_subm_EMEP);
        objectOutput.writeFloat(av_O3_subm);
        objectOutput.writeInt(av_O3_subm_EMEP);
        objectOutput.writeFloat(std_O3_subm);
        objectOutput.writeInt(std_O3_subm_EMEP);
        objectOutput.writeFloat(O3_lag_subm);
        objectOutput.writeInt(O3_lag_subm_EMEP);
        objectOutput.writeFloat(F_O3_subm);
        objectOutput.writeInt(F_O3_subm_EMEP);
        objectOutput.writeInt(Qc_F_O3_subm);
        objectOutput.writeInt(Qc_F_O3_subm_EMEP);
    }
}
