package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;

import fi.csc.smear.db.model.Sii1eddy;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import java.util.Date;

/**
 * The cache model class for representing Sii1eddy in entity cache.
 *
 * @author pj
 * @see Sii1eddy
 * @generated
 */
public class Sii1eddyCacheModel implements CacheModel<Sii1eddy>, Externalizable {
    public long samptime;
    public float U;
    public int U_EMEP;
    public float wind_dir;
    public int wind_dir_EMEP;
    public float eta;
    public int eta_EMEP;
    public float theta;
    public int theta_EMEP;
    public float beta;
    public int beta_EMEP;
    public float H;
    public int H_EMEP;
    public float tau;
    public int tau_EMEP;
    public float u_star;
    public int u_star_EMEP;
    public float MO_length;
    public int MO_length_EMEP;
    public float err_packet;
    public int err_packet_EMEP;
    public float F_c_LI70;
    public int F_c_LI70_EMEP;
    public float F_H2O_LI70;
    public int F_H2O_LI70_EMEP;
    public float F_CH4_LGR;
    public int F_CH4_LGR_EMEP;
    public float F_CH4_TGA;
    public int F_CH4_TGA_EMEP;
    public float F_H2O_PIC;
    public int F_H2O_PIC_EMEP;
    public float F_CH4_PIC;
    public int F_CH4_PIC_EMEP;
    public float LE_LI70;
    public int LE_LI70_EMEP;
    public float LE_PIC;
    public int LE_PIC_EMEP;
    public float av_u;
    public int av_u_EMEP;
    public float av_v;
    public int av_v_EMEP;
    public float av_w;
    public int av_w_EMEP;
    public float T_s;
    public int T_s_EMEP;
    public float av_c;
    public int av_c_EMEP;
    public float av_H2O_LI70;
    public int av_H2O_LI70_EMEP;
    public float av_CH4_LGR;
    public int av_CH4_LGR_EMEP;
    public float av_CH4_TGA;
    public int av_CH4_TGA_EMEP;
    public float av_H2O_PIC;
    public int av_H2O_PIC_EMEP;
    public float av_CH4_PIC;
    public int av_CH4_PIC_EMEP;
    public float std_u;
    public int std_u_EMEP;
    public float std_v;
    public int std_v_EMEP;
    public float std_w;
    public int std_w_EMEP;
    public float std_T_s;
    public int std_T_s_EMEP;
    public float std_c_LI70;
    public int std_c_LI70_EMEP;
    public float std_H2O_LI70;
    public int std_H2O_LI70_EMEP;
    public float std_CH4_LGR;
    public int std_CH4_LGR_EMEP;
    public float std_CH4_TGA;
    public int std_CH4_TGA_EMEP;
    public float std_H2O_PIC;
    public int std_H2O_PIC_EMEP;
    public float std_CH4_PIC;
    public int std_CH4_PIC_EMEP;
    public float c_lag_LI70;
    public int c_lag_LI70_EMEP;
    public float H2O_lag_LI70;
    public int H2O_lag_LI70_EMEP;
    public float CH4_lag_LGR;
    public int CH4_lag_LGR_EMEP;
    public float CH4_lag_TGA;
    public int CH4_lag_TGA_EMEP;
    public float H2O_lag_PIC;
    public int H2O_lag_PIC_EMEP;
    public float CH4_lag_PIC;
    public int CH4_lag_PIC_EMEP;
    public int Qc_H;
    public int Qc_H_EMEP;
    public int Qc_CO2_LI70;
    public int Qc_CO2_LI70_EMEP;
    public int Qc_CH4_LGR;
    public int Qc_CH4_LGR_EMEP;
    public int Qc_CH4_TGA;
    public int Qc_CH4_TGA_EMEP;
    public int Qc_CH4_PIC;
    public int Qc_CH4_PIC_EMEP;
    public int Qc_LE_LI70;
    public int Qc_LE_LI70_EMEP;
    public int Qc_LE_PIC;
    public int Qc_LE_PIC_EMEP;
    public int Qc_tau;
    public int Qc_tau_EMEP;

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(211);

        sb.append("{samptime=");
        sb.append(samptime);
        sb.append(", U=");
        sb.append(U);
        sb.append(", U_EMEP=");
        sb.append(U_EMEP);
        sb.append(", wind_dir=");
        sb.append(wind_dir);
        sb.append(", wind_dir_EMEP=");
        sb.append(wind_dir_EMEP);
        sb.append(", eta=");
        sb.append(eta);
        sb.append(", eta_EMEP=");
        sb.append(eta_EMEP);
        sb.append(", theta=");
        sb.append(theta);
        sb.append(", theta_EMEP=");
        sb.append(theta_EMEP);
        sb.append(", beta=");
        sb.append(beta);
        sb.append(", beta_EMEP=");
        sb.append(beta_EMEP);
        sb.append(", H=");
        sb.append(H);
        sb.append(", H_EMEP=");
        sb.append(H_EMEP);
        sb.append(", tau=");
        sb.append(tau);
        sb.append(", tau_EMEP=");
        sb.append(tau_EMEP);
        sb.append(", u_star=");
        sb.append(u_star);
        sb.append(", u_star_EMEP=");
        sb.append(u_star_EMEP);
        sb.append(", MO_length=");
        sb.append(MO_length);
        sb.append(", MO_length_EMEP=");
        sb.append(MO_length_EMEP);
        sb.append(", err_packet=");
        sb.append(err_packet);
        sb.append(", err_packet_EMEP=");
        sb.append(err_packet_EMEP);
        sb.append(", F_c_LI70=");
        sb.append(F_c_LI70);
        sb.append(", F_c_LI70_EMEP=");
        sb.append(F_c_LI70_EMEP);
        sb.append(", F_H2O_LI70=");
        sb.append(F_H2O_LI70);
        sb.append(", F_H2O_LI70_EMEP=");
        sb.append(F_H2O_LI70_EMEP);
        sb.append(", F_CH4_LGR=");
        sb.append(F_CH4_LGR);
        sb.append(", F_CH4_LGR_EMEP=");
        sb.append(F_CH4_LGR_EMEP);
        sb.append(", F_CH4_TGA=");
        sb.append(F_CH4_TGA);
        sb.append(", F_CH4_TGA_EMEP=");
        sb.append(F_CH4_TGA_EMEP);
        sb.append(", F_H2O_PIC=");
        sb.append(F_H2O_PIC);
        sb.append(", F_H2O_PIC_EMEP=");
        sb.append(F_H2O_PIC_EMEP);
        sb.append(", F_CH4_PIC=");
        sb.append(F_CH4_PIC);
        sb.append(", F_CH4_PIC_EMEP=");
        sb.append(F_CH4_PIC_EMEP);
        sb.append(", LE_LI70=");
        sb.append(LE_LI70);
        sb.append(", LE_LI70_EMEP=");
        sb.append(LE_LI70_EMEP);
        sb.append(", LE_PIC=");
        sb.append(LE_PIC);
        sb.append(", LE_PIC_EMEP=");
        sb.append(LE_PIC_EMEP);
        sb.append(", av_u=");
        sb.append(av_u);
        sb.append(", av_u_EMEP=");
        sb.append(av_u_EMEP);
        sb.append(", av_v=");
        sb.append(av_v);
        sb.append(", av_v_EMEP=");
        sb.append(av_v_EMEP);
        sb.append(", av_w=");
        sb.append(av_w);
        sb.append(", av_w_EMEP=");
        sb.append(av_w_EMEP);
        sb.append(", T_s=");
        sb.append(T_s);
        sb.append(", T_s_EMEP=");
        sb.append(T_s_EMEP);
        sb.append(", av_c=");
        sb.append(av_c);
        sb.append(", av_c_EMEP=");
        sb.append(av_c_EMEP);
        sb.append(", av_H2O_LI70=");
        sb.append(av_H2O_LI70);
        sb.append(", av_H2O_LI70_EMEP=");
        sb.append(av_H2O_LI70_EMEP);
        sb.append(", av_CH4_LGR=");
        sb.append(av_CH4_LGR);
        sb.append(", av_CH4_LGR_EMEP=");
        sb.append(av_CH4_LGR_EMEP);
        sb.append(", av_CH4_TGA=");
        sb.append(av_CH4_TGA);
        sb.append(", av_CH4_TGA_EMEP=");
        sb.append(av_CH4_TGA_EMEP);
        sb.append(", av_H2O_PIC=");
        sb.append(av_H2O_PIC);
        sb.append(", av_H2O_PIC_EMEP=");
        sb.append(av_H2O_PIC_EMEP);
        sb.append(", av_CH4_PIC=");
        sb.append(av_CH4_PIC);
        sb.append(", av_CH4_PIC_EMEP=");
        sb.append(av_CH4_PIC_EMEP);
        sb.append(", std_u=");
        sb.append(std_u);
        sb.append(", std_u_EMEP=");
        sb.append(std_u_EMEP);
        sb.append(", std_v=");
        sb.append(std_v);
        sb.append(", std_v_EMEP=");
        sb.append(std_v_EMEP);
        sb.append(", std_w=");
        sb.append(std_w);
        sb.append(", std_w_EMEP=");
        sb.append(std_w_EMEP);
        sb.append(", std_T_s=");
        sb.append(std_T_s);
        sb.append(", std_T_s_EMEP=");
        sb.append(std_T_s_EMEP);
        sb.append(", std_c_LI70=");
        sb.append(std_c_LI70);
        sb.append(", std_c_LI70_EMEP=");
        sb.append(std_c_LI70_EMEP);
        sb.append(", std_H2O_LI70=");
        sb.append(std_H2O_LI70);
        sb.append(", std_H2O_LI70_EMEP=");
        sb.append(std_H2O_LI70_EMEP);
        sb.append(", std_CH4_LGR=");
        sb.append(std_CH4_LGR);
        sb.append(", std_CH4_LGR_EMEP=");
        sb.append(std_CH4_LGR_EMEP);
        sb.append(", std_CH4_TGA=");
        sb.append(std_CH4_TGA);
        sb.append(", std_CH4_TGA_EMEP=");
        sb.append(std_CH4_TGA_EMEP);
        sb.append(", std_H2O_PIC=");
        sb.append(std_H2O_PIC);
        sb.append(", std_H2O_PIC_EMEP=");
        sb.append(std_H2O_PIC_EMEP);
        sb.append(", std_CH4_PIC=");
        sb.append(std_CH4_PIC);
        sb.append(", std_CH4_PIC_EMEP=");
        sb.append(std_CH4_PIC_EMEP);
        sb.append(", c_lag_LI70=");
        sb.append(c_lag_LI70);
        sb.append(", c_lag_LI70_EMEP=");
        sb.append(c_lag_LI70_EMEP);
        sb.append(", H2O_lag_LI70=");
        sb.append(H2O_lag_LI70);
        sb.append(", H2O_lag_LI70_EMEP=");
        sb.append(H2O_lag_LI70_EMEP);
        sb.append(", CH4_lag_LGR=");
        sb.append(CH4_lag_LGR);
        sb.append(", CH4_lag_LGR_EMEP=");
        sb.append(CH4_lag_LGR_EMEP);
        sb.append(", CH4_lag_TGA=");
        sb.append(CH4_lag_TGA);
        sb.append(", CH4_lag_TGA_EMEP=");
        sb.append(CH4_lag_TGA_EMEP);
        sb.append(", H2O_lag_PIC=");
        sb.append(H2O_lag_PIC);
        sb.append(", H2O_lag_PIC_EMEP=");
        sb.append(H2O_lag_PIC_EMEP);
        sb.append(", CH4_lag_PIC=");
        sb.append(CH4_lag_PIC);
        sb.append(", CH4_lag_PIC_EMEP=");
        sb.append(CH4_lag_PIC_EMEP);
        sb.append(", Qc_H=");
        sb.append(Qc_H);
        sb.append(", Qc_H_EMEP=");
        sb.append(Qc_H_EMEP);
        sb.append(", Qc_CO2_LI70=");
        sb.append(Qc_CO2_LI70);
        sb.append(", Qc_CO2_LI70_EMEP=");
        sb.append(Qc_CO2_LI70_EMEP);
        sb.append(", Qc_CH4_LGR=");
        sb.append(Qc_CH4_LGR);
        sb.append(", Qc_CH4_LGR_EMEP=");
        sb.append(Qc_CH4_LGR_EMEP);
        sb.append(", Qc_CH4_TGA=");
        sb.append(Qc_CH4_TGA);
        sb.append(", Qc_CH4_TGA_EMEP=");
        sb.append(Qc_CH4_TGA_EMEP);
        sb.append(", Qc_CH4_PIC=");
        sb.append(Qc_CH4_PIC);
        sb.append(", Qc_CH4_PIC_EMEP=");
        sb.append(Qc_CH4_PIC_EMEP);
        sb.append(", Qc_LE_LI70=");
        sb.append(Qc_LE_LI70);
        sb.append(", Qc_LE_LI70_EMEP=");
        sb.append(Qc_LE_LI70_EMEP);
        sb.append(", Qc_LE_PIC=");
        sb.append(Qc_LE_PIC);
        sb.append(", Qc_LE_PIC_EMEP=");
        sb.append(Qc_LE_PIC_EMEP);
        sb.append(", Qc_tau=");
        sb.append(Qc_tau);
        sb.append(", Qc_tau_EMEP=");
        sb.append(Qc_tau_EMEP);
        sb.append("}");

        return sb.toString();
    }

    @Override
    public Sii1eddy toEntityModel() {
        Sii1eddyImpl sii1eddyImpl = new Sii1eddyImpl();

        if (samptime == Long.MIN_VALUE) {
            sii1eddyImpl.setSamptime(null);
        } else {
            sii1eddyImpl.setSamptime(new Date(samptime));
        }

        sii1eddyImpl.setU(U);
        sii1eddyImpl.setU_EMEP(U_EMEP);
        sii1eddyImpl.setWind_dir(wind_dir);
        sii1eddyImpl.setWind_dir_EMEP(wind_dir_EMEP);
        sii1eddyImpl.setEta(eta);
        sii1eddyImpl.setEta_EMEP(eta_EMEP);
        sii1eddyImpl.setTheta(theta);
        sii1eddyImpl.setTheta_EMEP(theta_EMEP);
        sii1eddyImpl.setBeta(beta);
        sii1eddyImpl.setBeta_EMEP(beta_EMEP);
        sii1eddyImpl.setH(H);
        sii1eddyImpl.setH_EMEP(H_EMEP);
        sii1eddyImpl.setTau(tau);
        sii1eddyImpl.setTau_EMEP(tau_EMEP);
        sii1eddyImpl.setU_star(u_star);
        sii1eddyImpl.setU_star_EMEP(u_star_EMEP);
        sii1eddyImpl.setMO_length(MO_length);
        sii1eddyImpl.setMO_length_EMEP(MO_length_EMEP);
        sii1eddyImpl.setErr_packet(err_packet);
        sii1eddyImpl.setErr_packet_EMEP(err_packet_EMEP);
        sii1eddyImpl.setF_c_LI70(F_c_LI70);
        sii1eddyImpl.setF_c_LI70_EMEP(F_c_LI70_EMEP);
        sii1eddyImpl.setF_H2O_LI70(F_H2O_LI70);
        sii1eddyImpl.setF_H2O_LI70_EMEP(F_H2O_LI70_EMEP);
        sii1eddyImpl.setF_CH4_LGR(F_CH4_LGR);
        sii1eddyImpl.setF_CH4_LGR_EMEP(F_CH4_LGR_EMEP);
        sii1eddyImpl.setF_CH4_TGA(F_CH4_TGA);
        sii1eddyImpl.setF_CH4_TGA_EMEP(F_CH4_TGA_EMEP);
        sii1eddyImpl.setF_H2O_PIC(F_H2O_PIC);
        sii1eddyImpl.setF_H2O_PIC_EMEP(F_H2O_PIC_EMEP);
        sii1eddyImpl.setF_CH4_PIC(F_CH4_PIC);
        sii1eddyImpl.setF_CH4_PIC_EMEP(F_CH4_PIC_EMEP);
        sii1eddyImpl.setLE_LI70(LE_LI70);
        sii1eddyImpl.setLE_LI70_EMEP(LE_LI70_EMEP);
        sii1eddyImpl.setLE_PIC(LE_PIC);
        sii1eddyImpl.setLE_PIC_EMEP(LE_PIC_EMEP);
        sii1eddyImpl.setAv_u(av_u);
        sii1eddyImpl.setAv_u_EMEP(av_u_EMEP);
        sii1eddyImpl.setAv_v(av_v);
        sii1eddyImpl.setAv_v_EMEP(av_v_EMEP);
        sii1eddyImpl.setAv_w(av_w);
        sii1eddyImpl.setAv_w_EMEP(av_w_EMEP);
        sii1eddyImpl.setT_s(T_s);
        sii1eddyImpl.setT_s_EMEP(T_s_EMEP);
        sii1eddyImpl.setAv_c(av_c);
        sii1eddyImpl.setAv_c_EMEP(av_c_EMEP);
        sii1eddyImpl.setAv_H2O_LI70(av_H2O_LI70);
        sii1eddyImpl.setAv_H2O_LI70_EMEP(av_H2O_LI70_EMEP);
        sii1eddyImpl.setAv_CH4_LGR(av_CH4_LGR);
        sii1eddyImpl.setAv_CH4_LGR_EMEP(av_CH4_LGR_EMEP);
        sii1eddyImpl.setAv_CH4_TGA(av_CH4_TGA);
        sii1eddyImpl.setAv_CH4_TGA_EMEP(av_CH4_TGA_EMEP);
        sii1eddyImpl.setAv_H2O_PIC(av_H2O_PIC);
        sii1eddyImpl.setAv_H2O_PIC_EMEP(av_H2O_PIC_EMEP);
        sii1eddyImpl.setAv_CH4_PIC(av_CH4_PIC);
        sii1eddyImpl.setAv_CH4_PIC_EMEP(av_CH4_PIC_EMEP);
        sii1eddyImpl.setStd_u(std_u);
        sii1eddyImpl.setStd_u_EMEP(std_u_EMEP);
        sii1eddyImpl.setStd_v(std_v);
        sii1eddyImpl.setStd_v_EMEP(std_v_EMEP);
        sii1eddyImpl.setStd_w(std_w);
        sii1eddyImpl.setStd_w_EMEP(std_w_EMEP);
        sii1eddyImpl.setStd_T_s(std_T_s);
        sii1eddyImpl.setStd_T_s_EMEP(std_T_s_EMEP);
        sii1eddyImpl.setStd_c_LI70(std_c_LI70);
        sii1eddyImpl.setStd_c_LI70_EMEP(std_c_LI70_EMEP);
        sii1eddyImpl.setStd_H2O_LI70(std_H2O_LI70);
        sii1eddyImpl.setStd_H2O_LI70_EMEP(std_H2O_LI70_EMEP);
        sii1eddyImpl.setStd_CH4_LGR(std_CH4_LGR);
        sii1eddyImpl.setStd_CH4_LGR_EMEP(std_CH4_LGR_EMEP);
        sii1eddyImpl.setStd_CH4_TGA(std_CH4_TGA);
        sii1eddyImpl.setStd_CH4_TGA_EMEP(std_CH4_TGA_EMEP);
        sii1eddyImpl.setStd_H2O_PIC(std_H2O_PIC);
        sii1eddyImpl.setStd_H2O_PIC_EMEP(std_H2O_PIC_EMEP);
        sii1eddyImpl.setStd_CH4_PIC(std_CH4_PIC);
        sii1eddyImpl.setStd_CH4_PIC_EMEP(std_CH4_PIC_EMEP);
        sii1eddyImpl.setC_lag_LI70(c_lag_LI70);
        sii1eddyImpl.setC_lag_LI70_EMEP(c_lag_LI70_EMEP);
        sii1eddyImpl.setH2O_lag_LI70(H2O_lag_LI70);
        sii1eddyImpl.setH2O_lag_LI70_EMEP(H2O_lag_LI70_EMEP);
        sii1eddyImpl.setCH4_lag_LGR(CH4_lag_LGR);
        sii1eddyImpl.setCH4_lag_LGR_EMEP(CH4_lag_LGR_EMEP);
        sii1eddyImpl.setCH4_lag_TGA(CH4_lag_TGA);
        sii1eddyImpl.setCH4_lag_TGA_EMEP(CH4_lag_TGA_EMEP);
        sii1eddyImpl.setH2O_lag_PIC(H2O_lag_PIC);
        sii1eddyImpl.setH2O_lag_PIC_EMEP(H2O_lag_PIC_EMEP);
        sii1eddyImpl.setCH4_lag_PIC(CH4_lag_PIC);
        sii1eddyImpl.setCH4_lag_PIC_EMEP(CH4_lag_PIC_EMEP);
        sii1eddyImpl.setQc_H(Qc_H);
        sii1eddyImpl.setQc_H_EMEP(Qc_H_EMEP);
        sii1eddyImpl.setQc_CO2_LI70(Qc_CO2_LI70);
        sii1eddyImpl.setQc_CO2_LI70_EMEP(Qc_CO2_LI70_EMEP);
        sii1eddyImpl.setQc_CH4_LGR(Qc_CH4_LGR);
        sii1eddyImpl.setQc_CH4_LGR_EMEP(Qc_CH4_LGR_EMEP);
        sii1eddyImpl.setQc_CH4_TGA(Qc_CH4_TGA);
        sii1eddyImpl.setQc_CH4_TGA_EMEP(Qc_CH4_TGA_EMEP);
        sii1eddyImpl.setQc_CH4_PIC(Qc_CH4_PIC);
        sii1eddyImpl.setQc_CH4_PIC_EMEP(Qc_CH4_PIC_EMEP);
        sii1eddyImpl.setQc_LE_LI70(Qc_LE_LI70);
        sii1eddyImpl.setQc_LE_LI70_EMEP(Qc_LE_LI70_EMEP);
        sii1eddyImpl.setQc_LE_PIC(Qc_LE_PIC);
        sii1eddyImpl.setQc_LE_PIC_EMEP(Qc_LE_PIC_EMEP);
        sii1eddyImpl.setQc_tau(Qc_tau);
        sii1eddyImpl.setQc_tau_EMEP(Qc_tau_EMEP);

        sii1eddyImpl.resetOriginalValues();

        return sii1eddyImpl;
    }

    @Override
    public void readExternal(ObjectInput objectInput) throws IOException {
        samptime = objectInput.readLong();
        U = objectInput.readFloat();
        U_EMEP = objectInput.readInt();
        wind_dir = objectInput.readFloat();
        wind_dir_EMEP = objectInput.readInt();
        eta = objectInput.readFloat();
        eta_EMEP = objectInput.readInt();
        theta = objectInput.readFloat();
        theta_EMEP = objectInput.readInt();
        beta = objectInput.readFloat();
        beta_EMEP = objectInput.readInt();
        H = objectInput.readFloat();
        H_EMEP = objectInput.readInt();
        tau = objectInput.readFloat();
        tau_EMEP = objectInput.readInt();
        u_star = objectInput.readFloat();
        u_star_EMEP = objectInput.readInt();
        MO_length = objectInput.readFloat();
        MO_length_EMEP = objectInput.readInt();
        err_packet = objectInput.readFloat();
        err_packet_EMEP = objectInput.readInt();
        F_c_LI70 = objectInput.readFloat();
        F_c_LI70_EMEP = objectInput.readInt();
        F_H2O_LI70 = objectInput.readFloat();
        F_H2O_LI70_EMEP = objectInput.readInt();
        F_CH4_LGR = objectInput.readFloat();
        F_CH4_LGR_EMEP = objectInput.readInt();
        F_CH4_TGA = objectInput.readFloat();
        F_CH4_TGA_EMEP = objectInput.readInt();
        F_H2O_PIC = objectInput.readFloat();
        F_H2O_PIC_EMEP = objectInput.readInt();
        F_CH4_PIC = objectInput.readFloat();
        F_CH4_PIC_EMEP = objectInput.readInt();
        LE_LI70 = objectInput.readFloat();
        LE_LI70_EMEP = objectInput.readInt();
        LE_PIC = objectInput.readFloat();
        LE_PIC_EMEP = objectInput.readInt();
        av_u = objectInput.readFloat();
        av_u_EMEP = objectInput.readInt();
        av_v = objectInput.readFloat();
        av_v_EMEP = objectInput.readInt();
        av_w = objectInput.readFloat();
        av_w_EMEP = objectInput.readInt();
        T_s = objectInput.readFloat();
        T_s_EMEP = objectInput.readInt();
        av_c = objectInput.readFloat();
        av_c_EMEP = objectInput.readInt();
        av_H2O_LI70 = objectInput.readFloat();
        av_H2O_LI70_EMEP = objectInput.readInt();
        av_CH4_LGR = objectInput.readFloat();
        av_CH4_LGR_EMEP = objectInput.readInt();
        av_CH4_TGA = objectInput.readFloat();
        av_CH4_TGA_EMEP = objectInput.readInt();
        av_H2O_PIC = objectInput.readFloat();
        av_H2O_PIC_EMEP = objectInput.readInt();
        av_CH4_PIC = objectInput.readFloat();
        av_CH4_PIC_EMEP = objectInput.readInt();
        std_u = objectInput.readFloat();
        std_u_EMEP = objectInput.readInt();
        std_v = objectInput.readFloat();
        std_v_EMEP = objectInput.readInt();
        std_w = objectInput.readFloat();
        std_w_EMEP = objectInput.readInt();
        std_T_s = objectInput.readFloat();
        std_T_s_EMEP = objectInput.readInt();
        std_c_LI70 = objectInput.readFloat();
        std_c_LI70_EMEP = objectInput.readInt();
        std_H2O_LI70 = objectInput.readFloat();
        std_H2O_LI70_EMEP = objectInput.readInt();
        std_CH4_LGR = objectInput.readFloat();
        std_CH4_LGR_EMEP = objectInput.readInt();
        std_CH4_TGA = objectInput.readFloat();
        std_CH4_TGA_EMEP = objectInput.readInt();
        std_H2O_PIC = objectInput.readFloat();
        std_H2O_PIC_EMEP = objectInput.readInt();
        std_CH4_PIC = objectInput.readFloat();
        std_CH4_PIC_EMEP = objectInput.readInt();
        c_lag_LI70 = objectInput.readFloat();
        c_lag_LI70_EMEP = objectInput.readInt();
        H2O_lag_LI70 = objectInput.readFloat();
        H2O_lag_LI70_EMEP = objectInput.readInt();
        CH4_lag_LGR = objectInput.readFloat();
        CH4_lag_LGR_EMEP = objectInput.readInt();
        CH4_lag_TGA = objectInput.readFloat();
        CH4_lag_TGA_EMEP = objectInput.readInt();
        H2O_lag_PIC = objectInput.readFloat();
        H2O_lag_PIC_EMEP = objectInput.readInt();
        CH4_lag_PIC = objectInput.readFloat();
        CH4_lag_PIC_EMEP = objectInput.readInt();
        Qc_H = objectInput.readInt();
        Qc_H_EMEP = objectInput.readInt();
        Qc_CO2_LI70 = objectInput.readInt();
        Qc_CO2_LI70_EMEP = objectInput.readInt();
        Qc_CH4_LGR = objectInput.readInt();
        Qc_CH4_LGR_EMEP = objectInput.readInt();
        Qc_CH4_TGA = objectInput.readInt();
        Qc_CH4_TGA_EMEP = objectInput.readInt();
        Qc_CH4_PIC = objectInput.readInt();
        Qc_CH4_PIC_EMEP = objectInput.readInt();
        Qc_LE_LI70 = objectInput.readInt();
        Qc_LE_LI70_EMEP = objectInput.readInt();
        Qc_LE_PIC = objectInput.readInt();
        Qc_LE_PIC_EMEP = objectInput.readInt();
        Qc_tau = objectInput.readInt();
        Qc_tau_EMEP = objectInput.readInt();
    }

    @Override
    public void writeExternal(ObjectOutput objectOutput)
        throws IOException {
        objectOutput.writeLong(samptime);
        objectOutput.writeFloat(U);
        objectOutput.writeInt(U_EMEP);
        objectOutput.writeFloat(wind_dir);
        objectOutput.writeInt(wind_dir_EMEP);
        objectOutput.writeFloat(eta);
        objectOutput.writeInt(eta_EMEP);
        objectOutput.writeFloat(theta);
        objectOutput.writeInt(theta_EMEP);
        objectOutput.writeFloat(beta);
        objectOutput.writeInt(beta_EMEP);
        objectOutput.writeFloat(H);
        objectOutput.writeInt(H_EMEP);
        objectOutput.writeFloat(tau);
        objectOutput.writeInt(tau_EMEP);
        objectOutput.writeFloat(u_star);
        objectOutput.writeInt(u_star_EMEP);
        objectOutput.writeFloat(MO_length);
        objectOutput.writeInt(MO_length_EMEP);
        objectOutput.writeFloat(err_packet);
        objectOutput.writeInt(err_packet_EMEP);
        objectOutput.writeFloat(F_c_LI70);
        objectOutput.writeInt(F_c_LI70_EMEP);
        objectOutput.writeFloat(F_H2O_LI70);
        objectOutput.writeInt(F_H2O_LI70_EMEP);
        objectOutput.writeFloat(F_CH4_LGR);
        objectOutput.writeInt(F_CH4_LGR_EMEP);
        objectOutput.writeFloat(F_CH4_TGA);
        objectOutput.writeInt(F_CH4_TGA_EMEP);
        objectOutput.writeFloat(F_H2O_PIC);
        objectOutput.writeInt(F_H2O_PIC_EMEP);
        objectOutput.writeFloat(F_CH4_PIC);
        objectOutput.writeInt(F_CH4_PIC_EMEP);
        objectOutput.writeFloat(LE_LI70);
        objectOutput.writeInt(LE_LI70_EMEP);
        objectOutput.writeFloat(LE_PIC);
        objectOutput.writeInt(LE_PIC_EMEP);
        objectOutput.writeFloat(av_u);
        objectOutput.writeInt(av_u_EMEP);
        objectOutput.writeFloat(av_v);
        objectOutput.writeInt(av_v_EMEP);
        objectOutput.writeFloat(av_w);
        objectOutput.writeInt(av_w_EMEP);
        objectOutput.writeFloat(T_s);
        objectOutput.writeInt(T_s_EMEP);
        objectOutput.writeFloat(av_c);
        objectOutput.writeInt(av_c_EMEP);
        objectOutput.writeFloat(av_H2O_LI70);
        objectOutput.writeInt(av_H2O_LI70_EMEP);
        objectOutput.writeFloat(av_CH4_LGR);
        objectOutput.writeInt(av_CH4_LGR_EMEP);
        objectOutput.writeFloat(av_CH4_TGA);
        objectOutput.writeInt(av_CH4_TGA_EMEP);
        objectOutput.writeFloat(av_H2O_PIC);
        objectOutput.writeInt(av_H2O_PIC_EMEP);
        objectOutput.writeFloat(av_CH4_PIC);
        objectOutput.writeInt(av_CH4_PIC_EMEP);
        objectOutput.writeFloat(std_u);
        objectOutput.writeInt(std_u_EMEP);
        objectOutput.writeFloat(std_v);
        objectOutput.writeInt(std_v_EMEP);
        objectOutput.writeFloat(std_w);
        objectOutput.writeInt(std_w_EMEP);
        objectOutput.writeFloat(std_T_s);
        objectOutput.writeInt(std_T_s_EMEP);
        objectOutput.writeFloat(std_c_LI70);
        objectOutput.writeInt(std_c_LI70_EMEP);
        objectOutput.writeFloat(std_H2O_LI70);
        objectOutput.writeInt(std_H2O_LI70_EMEP);
        objectOutput.writeFloat(std_CH4_LGR);
        objectOutput.writeInt(std_CH4_LGR_EMEP);
        objectOutput.writeFloat(std_CH4_TGA);
        objectOutput.writeInt(std_CH4_TGA_EMEP);
        objectOutput.writeFloat(std_H2O_PIC);
        objectOutput.writeInt(std_H2O_PIC_EMEP);
        objectOutput.writeFloat(std_CH4_PIC);
        objectOutput.writeInt(std_CH4_PIC_EMEP);
        objectOutput.writeFloat(c_lag_LI70);
        objectOutput.writeInt(c_lag_LI70_EMEP);
        objectOutput.writeFloat(H2O_lag_LI70);
        objectOutput.writeInt(H2O_lag_LI70_EMEP);
        objectOutput.writeFloat(CH4_lag_LGR);
        objectOutput.writeInt(CH4_lag_LGR_EMEP);
        objectOutput.writeFloat(CH4_lag_TGA);
        objectOutput.writeInt(CH4_lag_TGA_EMEP);
        objectOutput.writeFloat(H2O_lag_PIC);
        objectOutput.writeInt(H2O_lag_PIC_EMEP);
        objectOutput.writeFloat(CH4_lag_PIC);
        objectOutput.writeInt(CH4_lag_PIC_EMEP);
        objectOutput.writeInt(Qc_H);
        objectOutput.writeInt(Qc_H_EMEP);
        objectOutput.writeInt(Qc_CO2_LI70);
        objectOutput.writeInt(Qc_CO2_LI70_EMEP);
        objectOutput.writeInt(Qc_CH4_LGR);
        objectOutput.writeInt(Qc_CH4_LGR_EMEP);
        objectOutput.writeInt(Qc_CH4_TGA);
        objectOutput.writeInt(Qc_CH4_TGA_EMEP);
        objectOutput.writeInt(Qc_CH4_PIC);
        objectOutput.writeInt(Qc_CH4_PIC_EMEP);
        objectOutput.writeInt(Qc_LE_LI70);
        objectOutput.writeInt(Qc_LE_LI70_EMEP);
        objectOutput.writeInt(Qc_LE_PIC);
        objectOutput.writeInt(Qc_LE_PIC_EMEP);
        objectOutput.writeInt(Qc_tau);
        objectOutput.writeInt(Qc_tau_EMEP);
    }
}
