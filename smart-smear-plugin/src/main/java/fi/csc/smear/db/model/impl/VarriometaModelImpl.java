package fi.csc.smear.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.smear.db.model.Varriometa;
import fi.csc.smear.db.model.VarriometaModel;
import fi.csc.smear.db.model.VarriometaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Varriometa service. Represents a row in the &quot;VAR_META&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.smear.db.model.VarriometaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VarriometaImpl}.
 * </p>
 *
 * @author pj
 * @see VarriometaImpl
 * @see fi.csc.smear.db.model.Varriometa
 * @see fi.csc.smear.db.model.VarriometaModel
 * @generated
 */
@JSON(strict = true)
public class VarriometaModelImpl extends BaseModelImpl<Varriometa>
    implements VarriometaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a varriometa model instance should use the {@link fi.csc.smear.db.model.Varriometa} interface instead.
     */
    public static final String TABLE_NAME = "VAR_META";
    public static final Object[][] TABLE_COLUMNS = {
            { "SAMPTIME", Types.TIMESTAMP },
            { "WS0", Types.FLOAT },
            { "WS1", Types.FLOAT },
            { "WS2", Types.FLOAT },
            { "WS3", Types.FLOAT },
            { "WS4", Types.FLOAT },
            { "RMM", Types.FLOAT },
            { "TLOG", Types.FLOAT },
            { "PAR", Types.FLOAT },
            { "GLOB", Types.FLOAT },
            { "REFL", Types.FLOAT },
            { "NET", Types.FLOAT },
            { "UVA", Types.FLOAT },
            { "UVB", Types.FLOAT },
            { "UVAT", Types.FLOAT },
            { "UVBT", Types.FLOAT },
            { "RAIN", Types.FLOAT },
            { "TDRY0", Types.FLOAT },
            { "TWET0", Types.FLOAT },
            { "TDRY1", Types.FLOAT },
            { "TWET1", Types.FLOAT },
            { "TDRY2", Types.FLOAT },
            { "TWET2", Types.FLOAT },
            { "TDRY3", Types.FLOAT },
            { "TWET3", Types.FLOAT },
            { "TDRY4", Types.FLOAT },
            { "TWET4", Types.FLOAT },
            { "ST", Types.FLOAT },
            { "WDIR", Types.FLOAT },
            { "CPC1", Types.FLOAT },
            { "O3_0", Types.FLOAT },
            { "O3_1", Types.FLOAT },
            { "O3_2", Types.FLOAT },
            { "O3_3", Types.FLOAT },
            { "O3_4", Types.FLOAT },
            { "SO2_0", Types.FLOAT },
            { "SO2_1", Types.FLOAT },
            { "SO2_2", Types.FLOAT },
            { "SO2_3", Types.FLOAT },
            { "SO2_4", Types.FLOAT },
            { "NO_0", Types.FLOAT },
            { "NO_1", Types.FLOAT },
            { "NO_2", Types.FLOAT },
            { "NO_4", Types.FLOAT },
            { "NOX_0", Types.FLOAT },
            { "NOX_1", Types.FLOAT },
            { "NOX_2", Types.FLOAT },
            { "NOX_4", Types.FLOAT },
            { "P", Types.FLOAT },
            { "HUM_RH", Types.FLOAT },
            { "HUM_T", Types.FLOAT },
            { "temp", Types.FLOAT },
            { "WS00", Types.FLOAT },
            { "visibility", Types.FLOAT },
            { "rainint", Types.FLOAT },
            { "Precipacc", Types.FLOAT },
            { "haildiammax", Types.FLOAT },
            { "snowint", Types.FLOAT },
            { "visibilitylpm", Types.FLOAT },
            { "wthcode", Types.INTEGER },
            { "CO_1", Types.FLOAT },
            { "quality", Types.INTEGER },
            { "Tsoil", Types.FLOAT },
            { "wsoil", Types.FLOAT },
            { "CO206", Types.FLOAT },
            { "CO2soil", Types.FLOAT },
            { "Tsoil_EMEP", Types.INTEGER },
            { "wsoil_EMEP", Types.INTEGER },
            { "CO206_EMEP", Types.INTEGER },
            { "CO2soil_EMEP", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table VAR_META (SAMPTIME DATE not null primary key,WS0 DOUBLE,WS1 DOUBLE,WS2 DOUBLE,WS3 DOUBLE,WS4 DOUBLE,RMM DOUBLE,TLOG DOUBLE,PAR DOUBLE,GLOB DOUBLE,REFL DOUBLE,NET DOUBLE,UVA DOUBLE,UVB DOUBLE,UVAT DOUBLE,UVBT DOUBLE,RAIN DOUBLE,TDRY0 DOUBLE,TWET0 DOUBLE,TDRY1 DOUBLE,TWET1 DOUBLE,TDRY2 DOUBLE,TWET2 DOUBLE,TDRY3 DOUBLE,TWET3 DOUBLE,TDRY4 DOUBLE,TWET4 DOUBLE,ST DOUBLE,WDIR DOUBLE,CPC1 DOUBLE,O3_0 DOUBLE,O3_1 DOUBLE,O3_2 DOUBLE,O3_3 DOUBLE,O3_4 DOUBLE,SO2_0 DOUBLE,SO2_1 DOUBLE,SO2_2 DOUBLE,SO2_3 DOUBLE,SO2_4 DOUBLE,NO_0 DOUBLE,NO_1 DOUBLE,NO_2 DOUBLE,NO_4 DOUBLE,NOX_0 DOUBLE,NOX_1 DOUBLE,NOX_2 DOUBLE,NOX_4 DOUBLE,P DOUBLE,HUM_RH DOUBLE,HUM_T DOUBLE,temp DOUBLE,WS00 DOUBLE,visibility DOUBLE,rainint DOUBLE,Precipacc DOUBLE,haildiammax DOUBLE,snowint DOUBLE,visibilitylpm DOUBLE,wthcode INTEGER,CO_1 DOUBLE,quality INTEGER,Tsoil DOUBLE,wsoil DOUBLE,CO206 DOUBLE,CO2soil DOUBLE,Tsoil_EMEP INTEGER,wsoil_EMEP INTEGER,CO206_EMEP INTEGER,CO2soil_EMEP INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table VAR_META";
    public static final String ORDER_BY_JPQL = " ORDER BY varriometa.SAMPTIME ASC";
    public static final String ORDER_BY_SQL = " ORDER BY VAR_META.SAMPTIME ASC";
    public static final String DATA_SOURCE = "smear";
    public static final String SESSION_FACTORY = "smearSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.smear.db.model.Varriometa"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.smear.db.model.Varriometa"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.smear.db.model.Varriometa"));
    private static ClassLoader _classLoader = Varriometa.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Varriometa.class
        };
    private Date _SAMPTIME;
    private float _WS0;
    private float _WS1;
    private float _WS2;
    private float _WS3;
    private float _WS4;
    private float _RMM;
    private float _TLOG;
    private float _PAR;
    private float _GLOB;
    private float _REFL;
    private float _NET;
    private float _UVA;
    private float _UVB;
    private float _UVAT;
    private float _UVBT;
    private float _RAIN;
    private float _TDRY0;
    private float _TWET0;
    private float _TDRY1;
    private float _TWET1;
    private float _TDRY2;
    private float _TWET2;
    private float _TDRY3;
    private float _TWET3;
    private float _TDRY4;
    private float _TWET4;
    private float _ST;
    private float _WDIR;
    private float _CPC1;
    private float _O3_0;
    private float _O3_1;
    private float _O3_2;
    private float _O3_3;
    private float _O3_4;
    private float _SO2_0;
    private float _SO2_1;
    private float _SO2_2;
    private float _SO2_3;
    private float _SO2_4;
    private float _NO_0;
    private float _NO_1;
    private float _NO_2;
    private float _NO_4;
    private float _NOX_0;
    private float _NOX_1;
    private float _NOX_2;
    private float _NOX_4;
    private float _P;
    private float _HUM_RH;
    private float _HUM_T;
    private float _temp;
    private float _WS00;
    private float _visibility;
    private float _rainint;
    private float _Precipacc;
    private float _haildiammax;
    private float _snowint;
    private float _visibilitylpm;
    private int _wthcode;
    private float _CO_1;
    private int _quality;
    private float _Tsoil;
    private float _wsoil;
    private float _CO206;
    private float _CO2soil;
    private int _Tsoil_EMEP;
    private int _wsoil_EMEP;
    private int _CO206_EMEP;
    private int _CO2soil_EMEP;
    private Varriometa _escapedModel;

    public VarriometaModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Varriometa toModel(VarriometaSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Varriometa model = new VarriometaImpl();

        model.setSAMPTIME(soapModel.getSAMPTIME());
        model.setWS0(soapModel.getWS0());
        model.setWS1(soapModel.getWS1());
        model.setWS2(soapModel.getWS2());
        model.setWS3(soapModel.getWS3());
        model.setWS4(soapModel.getWS4());
        model.setRMM(soapModel.getRMM());
        model.setTLOG(soapModel.getTLOG());
        model.setPAR(soapModel.getPAR());
        model.setGLOB(soapModel.getGLOB());
        model.setREFL(soapModel.getREFL());
        model.setNET(soapModel.getNET());
        model.setUVA(soapModel.getUVA());
        model.setUVB(soapModel.getUVB());
        model.setUVAT(soapModel.getUVAT());
        model.setUVBT(soapModel.getUVBT());
        model.setRAIN(soapModel.getRAIN());
        model.setTDRY0(soapModel.getTDRY0());
        model.setTWET0(soapModel.getTWET0());
        model.setTDRY1(soapModel.getTDRY1());
        model.setTWET1(soapModel.getTWET1());
        model.setTDRY2(soapModel.getTDRY2());
        model.setTWET2(soapModel.getTWET2());
        model.setTDRY3(soapModel.getTDRY3());
        model.setTWET3(soapModel.getTWET3());
        model.setTDRY4(soapModel.getTDRY4());
        model.setTWET4(soapModel.getTWET4());
        model.setST(soapModel.getST());
        model.setWDIR(soapModel.getWDIR());
        model.setCPC1(soapModel.getCPC1());
        model.setO3_0(soapModel.getO3_0());
        model.setO3_1(soapModel.getO3_1());
        model.setO3_2(soapModel.getO3_2());
        model.setO3_3(soapModel.getO3_3());
        model.setO3_4(soapModel.getO3_4());
        model.setSO2_0(soapModel.getSO2_0());
        model.setSO2_1(soapModel.getSO2_1());
        model.setSO2_2(soapModel.getSO2_2());
        model.setSO2_3(soapModel.getSO2_3());
        model.setSO2_4(soapModel.getSO2_4());
        model.setNO_0(soapModel.getNO_0());
        model.setNO_1(soapModel.getNO_1());
        model.setNO_2(soapModel.getNO_2());
        model.setNO_4(soapModel.getNO_4());
        model.setNOX_0(soapModel.getNOX_0());
        model.setNOX_1(soapModel.getNOX_1());
        model.setNOX_2(soapModel.getNOX_2());
        model.setNOX_4(soapModel.getNOX_4());
        model.setP(soapModel.getP());
        model.setHUM_RH(soapModel.getHUM_RH());
        model.setHUM_T(soapModel.getHUM_T());
        model.setTemp(soapModel.getTemp());
        model.setWS00(soapModel.getWS00());
        model.setVisibility(soapModel.getVisibility());
        model.setRainint(soapModel.getRainint());
        model.setPrecipacc(soapModel.getPrecipacc());
        model.setHaildiammax(soapModel.getHaildiammax());
        model.setSnowint(soapModel.getSnowint());
        model.setVisibilitylpm(soapModel.getVisibilitylpm());
        model.setWthcode(soapModel.getWthcode());
        model.setCO_1(soapModel.getCO_1());
        model.setQuality(soapModel.getQuality());
        model.setTsoil(soapModel.getTsoil());
        model.setWsoil(soapModel.getWsoil());
        model.setCO206(soapModel.getCO206());
        model.setCO2soil(soapModel.getCO2soil());
        model.setTsoil_EMEP(soapModel.getTsoil_EMEP());
        model.setWsoil_EMEP(soapModel.getWsoil_EMEP());
        model.setCO206_EMEP(soapModel.getCO206_EMEP());
        model.setCO2soil_EMEP(soapModel.getCO2soil_EMEP());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Varriometa> toModels(VarriometaSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Varriometa> models = new ArrayList<Varriometa>(soapModels.length);

        for (VarriometaSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public java.util.Date getPrimaryKey() {
        return _SAMPTIME;
    }

    @Override
    public void setPrimaryKey(java.util.Date primaryKey) {
        setSAMPTIME(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _SAMPTIME;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((java.util.Date) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return Varriometa.class;
    }

    @Override
    public String getModelClassName() {
        return Varriometa.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("SAMPTIME", getSAMPTIME());
        attributes.put("WS0", getWS0());
        attributes.put("WS1", getWS1());
        attributes.put("WS2", getWS2());
        attributes.put("WS3", getWS3());
        attributes.put("WS4", getWS4());
        attributes.put("RMM", getRMM());
        attributes.put("TLOG", getTLOG());
        attributes.put("PAR", getPAR());
        attributes.put("GLOB", getGLOB());
        attributes.put("REFL", getREFL());
        attributes.put("NET", getNET());
        attributes.put("UVA", getUVA());
        attributes.put("UVB", getUVB());
        attributes.put("UVAT", getUVAT());
        attributes.put("UVBT", getUVBT());
        attributes.put("RAIN", getRAIN());
        attributes.put("TDRY0", getTDRY0());
        attributes.put("TWET0", getTWET0());
        attributes.put("TDRY1", getTDRY1());
        attributes.put("TWET1", getTWET1());
        attributes.put("TDRY2", getTDRY2());
        attributes.put("TWET2", getTWET2());
        attributes.put("TDRY3", getTDRY3());
        attributes.put("TWET3", getTWET3());
        attributes.put("TDRY4", getTDRY4());
        attributes.put("TWET4", getTWET4());
        attributes.put("ST", getST());
        attributes.put("WDIR", getWDIR());
        attributes.put("CPC1", getCPC1());
        attributes.put("O3_0", getO3_0());
        attributes.put("O3_1", getO3_1());
        attributes.put("O3_2", getO3_2());
        attributes.put("O3_3", getO3_3());
        attributes.put("O3_4", getO3_4());
        attributes.put("SO2_0", getSO2_0());
        attributes.put("SO2_1", getSO2_1());
        attributes.put("SO2_2", getSO2_2());
        attributes.put("SO2_3", getSO2_3());
        attributes.put("SO2_4", getSO2_4());
        attributes.put("NO_0", getNO_0());
        attributes.put("NO_1", getNO_1());
        attributes.put("NO_2", getNO_2());
        attributes.put("NO_4", getNO_4());
        attributes.put("NOX_0", getNOX_0());
        attributes.put("NOX_1", getNOX_1());
        attributes.put("NOX_2", getNOX_2());
        attributes.put("NOX_4", getNOX_4());
        attributes.put("P", getP());
        attributes.put("HUM_RH", getHUM_RH());
        attributes.put("HUM_T", getHUM_T());
        attributes.put("temp", getTemp());
        attributes.put("WS00", getWS00());
        attributes.put("visibility", getVisibility());
        attributes.put("rainint", getRainint());
        attributes.put("Precipacc", getPrecipacc());
        attributes.put("haildiammax", getHaildiammax());
        attributes.put("snowint", getSnowint());
        attributes.put("visibilitylpm", getVisibilitylpm());
        attributes.put("wthcode", getWthcode());
        attributes.put("CO_1", getCO_1());
        attributes.put("quality", getQuality());
        attributes.put("Tsoil", getTsoil());
        attributes.put("wsoil", getWsoil());
        attributes.put("CO206", getCO206());
        attributes.put("CO2soil", getCO2soil());
        attributes.put("Tsoil_EMEP", getTsoil_EMEP());
        attributes.put("wsoil_EMEP", getWsoil_EMEP());
        attributes.put("CO206_EMEP", getCO206_EMEP());
        attributes.put("CO2soil_EMEP", getCO2soil_EMEP());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Date SAMPTIME = (Date) attributes.get("SAMPTIME");

        if (SAMPTIME != null) {
            setSAMPTIME(SAMPTIME);
        }

        Float WS0 = (Float) attributes.get("WS0");

        if (WS0 != null) {
            setWS0(WS0);
        }

        Float WS1 = (Float) attributes.get("WS1");

        if (WS1 != null) {
            setWS1(WS1);
        }

        Float WS2 = (Float) attributes.get("WS2");

        if (WS2 != null) {
            setWS2(WS2);
        }

        Float WS3 = (Float) attributes.get("WS3");

        if (WS3 != null) {
            setWS3(WS3);
        }

        Float WS4 = (Float) attributes.get("WS4");

        if (WS4 != null) {
            setWS4(WS4);
        }

        Float RMM = (Float) attributes.get("RMM");

        if (RMM != null) {
            setRMM(RMM);
        }

        Float TLOG = (Float) attributes.get("TLOG");

        if (TLOG != null) {
            setTLOG(TLOG);
        }

        Float PAR = (Float) attributes.get("PAR");

        if (PAR != null) {
            setPAR(PAR);
        }

        Float GLOB = (Float) attributes.get("GLOB");

        if (GLOB != null) {
            setGLOB(GLOB);
        }

        Float REFL = (Float) attributes.get("REFL");

        if (REFL != null) {
            setREFL(REFL);
        }

        Float NET = (Float) attributes.get("NET");

        if (NET != null) {
            setNET(NET);
        }

        Float UVA = (Float) attributes.get("UVA");

        if (UVA != null) {
            setUVA(UVA);
        }

        Float UVB = (Float) attributes.get("UVB");

        if (UVB != null) {
            setUVB(UVB);
        }

        Float UVAT = (Float) attributes.get("UVAT");

        if (UVAT != null) {
            setUVAT(UVAT);
        }

        Float UVBT = (Float) attributes.get("UVBT");

        if (UVBT != null) {
            setUVBT(UVBT);
        }

        Float RAIN = (Float) attributes.get("RAIN");

        if (RAIN != null) {
            setRAIN(RAIN);
        }

        Float TDRY0 = (Float) attributes.get("TDRY0");

        if (TDRY0 != null) {
            setTDRY0(TDRY0);
        }

        Float TWET0 = (Float) attributes.get("TWET0");

        if (TWET0 != null) {
            setTWET0(TWET0);
        }

        Float TDRY1 = (Float) attributes.get("TDRY1");

        if (TDRY1 != null) {
            setTDRY1(TDRY1);
        }

        Float TWET1 = (Float) attributes.get("TWET1");

        if (TWET1 != null) {
            setTWET1(TWET1);
        }

        Float TDRY2 = (Float) attributes.get("TDRY2");

        if (TDRY2 != null) {
            setTDRY2(TDRY2);
        }

        Float TWET2 = (Float) attributes.get("TWET2");

        if (TWET2 != null) {
            setTWET2(TWET2);
        }

        Float TDRY3 = (Float) attributes.get("TDRY3");

        if (TDRY3 != null) {
            setTDRY3(TDRY3);
        }

        Float TWET3 = (Float) attributes.get("TWET3");

        if (TWET3 != null) {
            setTWET3(TWET3);
        }

        Float TDRY4 = (Float) attributes.get("TDRY4");

        if (TDRY4 != null) {
            setTDRY4(TDRY4);
        }

        Float TWET4 = (Float) attributes.get("TWET4");

        if (TWET4 != null) {
            setTWET4(TWET4);
        }

        Float ST = (Float) attributes.get("ST");

        if (ST != null) {
            setST(ST);
        }

        Float WDIR = (Float) attributes.get("WDIR");

        if (WDIR != null) {
            setWDIR(WDIR);
        }

        Float CPC1 = (Float) attributes.get("CPC1");

        if (CPC1 != null) {
            setCPC1(CPC1);
        }

        Float O3_0 = (Float) attributes.get("O3_0");

        if (O3_0 != null) {
            setO3_0(O3_0);
        }

        Float O3_1 = (Float) attributes.get("O3_1");

        if (O3_1 != null) {
            setO3_1(O3_1);
        }

        Float O3_2 = (Float) attributes.get("O3_2");

        if (O3_2 != null) {
            setO3_2(O3_2);
        }

        Float O3_3 = (Float) attributes.get("O3_3");

        if (O3_3 != null) {
            setO3_3(O3_3);
        }

        Float O3_4 = (Float) attributes.get("O3_4");

        if (O3_4 != null) {
            setO3_4(O3_4);
        }

        Float SO2_0 = (Float) attributes.get("SO2_0");

        if (SO2_0 != null) {
            setSO2_0(SO2_0);
        }

        Float SO2_1 = (Float) attributes.get("SO2_1");

        if (SO2_1 != null) {
            setSO2_1(SO2_1);
        }

        Float SO2_2 = (Float) attributes.get("SO2_2");

        if (SO2_2 != null) {
            setSO2_2(SO2_2);
        }

        Float SO2_3 = (Float) attributes.get("SO2_3");

        if (SO2_3 != null) {
            setSO2_3(SO2_3);
        }

        Float SO2_4 = (Float) attributes.get("SO2_4");

        if (SO2_4 != null) {
            setSO2_4(SO2_4);
        }

        Float NO_0 = (Float) attributes.get("NO_0");

        if (NO_0 != null) {
            setNO_0(NO_0);
        }

        Float NO_1 = (Float) attributes.get("NO_1");

        if (NO_1 != null) {
            setNO_1(NO_1);
        }

        Float NO_2 = (Float) attributes.get("NO_2");

        if (NO_2 != null) {
            setNO_2(NO_2);
        }

        Float NO_4 = (Float) attributes.get("NO_4");

        if (NO_4 != null) {
            setNO_4(NO_4);
        }

        Float NOX_0 = (Float) attributes.get("NOX_0");

        if (NOX_0 != null) {
            setNOX_0(NOX_0);
        }

        Float NOX_1 = (Float) attributes.get("NOX_1");

        if (NOX_1 != null) {
            setNOX_1(NOX_1);
        }

        Float NOX_2 = (Float) attributes.get("NOX_2");

        if (NOX_2 != null) {
            setNOX_2(NOX_2);
        }

        Float NOX_4 = (Float) attributes.get("NOX_4");

        if (NOX_4 != null) {
            setNOX_4(NOX_4);
        }

        Float P = (Float) attributes.get("P");

        if (P != null) {
            setP(P);
        }

        Float HUM_RH = (Float) attributes.get("HUM_RH");

        if (HUM_RH != null) {
            setHUM_RH(HUM_RH);
        }

        Float HUM_T = (Float) attributes.get("HUM_T");

        if (HUM_T != null) {
            setHUM_T(HUM_T);
        }

        Float temp = (Float) attributes.get("temp");

        if (temp != null) {
            setTemp(temp);
        }

        Float WS00 = (Float) attributes.get("WS00");

        if (WS00 != null) {
            setWS00(WS00);
        }

        Float visibility = (Float) attributes.get("visibility");

        if (visibility != null) {
            setVisibility(visibility);
        }

        Float rainint = (Float) attributes.get("rainint");

        if (rainint != null) {
            setRainint(rainint);
        }

        Float Precipacc = (Float) attributes.get("Precipacc");

        if (Precipacc != null) {
            setPrecipacc(Precipacc);
        }

        Float haildiammax = (Float) attributes.get("haildiammax");

        if (haildiammax != null) {
            setHaildiammax(haildiammax);
        }

        Float snowint = (Float) attributes.get("snowint");

        if (snowint != null) {
            setSnowint(snowint);
        }

        Float visibilitylpm = (Float) attributes.get("visibilitylpm");

        if (visibilitylpm != null) {
            setVisibilitylpm(visibilitylpm);
        }

        Integer wthcode = (Integer) attributes.get("wthcode");

        if (wthcode != null) {
            setWthcode(wthcode);
        }

        Float CO_1 = (Float) attributes.get("CO_1");

        if (CO_1 != null) {
            setCO_1(CO_1);
        }

        Integer quality = (Integer) attributes.get("quality");

        if (quality != null) {
            setQuality(quality);
        }

        Float Tsoil = (Float) attributes.get("Tsoil");

        if (Tsoil != null) {
            setTsoil(Tsoil);
        }

        Float wsoil = (Float) attributes.get("wsoil");

        if (wsoil != null) {
            setWsoil(wsoil);
        }

        Float CO206 = (Float) attributes.get("CO206");

        if (CO206 != null) {
            setCO206(CO206);
        }

        Float CO2soil = (Float) attributes.get("CO2soil");

        if (CO2soil != null) {
            setCO2soil(CO2soil);
        }

        Integer Tsoil_EMEP = (Integer) attributes.get("Tsoil_EMEP");

        if (Tsoil_EMEP != null) {
            setTsoil_EMEP(Tsoil_EMEP);
        }

        Integer wsoil_EMEP = (Integer) attributes.get("wsoil_EMEP");

        if (wsoil_EMEP != null) {
            setWsoil_EMEP(wsoil_EMEP);
        }

        Integer CO206_EMEP = (Integer) attributes.get("CO206_EMEP");

        if (CO206_EMEP != null) {
            setCO206_EMEP(CO206_EMEP);
        }

        Integer CO2soil_EMEP = (Integer) attributes.get("CO2soil_EMEP");

        if (CO2soil_EMEP != null) {
            setCO2soil_EMEP(CO2soil_EMEP);
        }
    }

    @JSON
    @Override
    public Date getSAMPTIME() {
        return _SAMPTIME;
    }

    @Override
    public void setSAMPTIME(Date SAMPTIME) {
        _SAMPTIME = SAMPTIME;
    }

    @JSON
    @Override
    public float getWS0() {
        return _WS0;
    }

    @Override
    public void setWS0(float WS0) {
        _WS0 = WS0;
    }

    @JSON
    @Override
    public float getWS1() {
        return _WS1;
    }

    @Override
    public void setWS1(float WS1) {
        _WS1 = WS1;
    }

    @JSON
    @Override
    public float getWS2() {
        return _WS2;
    }

    @Override
    public void setWS2(float WS2) {
        _WS2 = WS2;
    }

    @JSON
    @Override
    public float getWS3() {
        return _WS3;
    }

    @Override
    public void setWS3(float WS3) {
        _WS3 = WS3;
    }

    @JSON
    @Override
    public float getWS4() {
        return _WS4;
    }

    @Override
    public void setWS4(float WS4) {
        _WS4 = WS4;
    }

    @JSON
    @Override
    public float getRMM() {
        return _RMM;
    }

    @Override
    public void setRMM(float RMM) {
        _RMM = RMM;
    }

    @JSON
    @Override
    public float getTLOG() {
        return _TLOG;
    }

    @Override
    public void setTLOG(float TLOG) {
        _TLOG = TLOG;
    }

    @JSON
    @Override
    public float getPAR() {
        return _PAR;
    }

    @Override
    public void setPAR(float PAR) {
        _PAR = PAR;
    }

    @JSON
    @Override
    public float getGLOB() {
        return _GLOB;
    }

    @Override
    public void setGLOB(float GLOB) {
        _GLOB = GLOB;
    }

    @JSON
    @Override
    public float getREFL() {
        return _REFL;
    }

    @Override
    public void setREFL(float REFL) {
        _REFL = REFL;
    }

    @JSON
    @Override
    public float getNET() {
        return _NET;
    }

    @Override
    public void setNET(float NET) {
        _NET = NET;
    }

    @JSON
    @Override
    public float getUVA() {
        return _UVA;
    }

    @Override
    public void setUVA(float UVA) {
        _UVA = UVA;
    }

    @JSON
    @Override
    public float getUVB() {
        return _UVB;
    }

    @Override
    public void setUVB(float UVB) {
        _UVB = UVB;
    }

    @JSON
    @Override
    public float getUVAT() {
        return _UVAT;
    }

    @Override
    public void setUVAT(float UVAT) {
        _UVAT = UVAT;
    }

    @JSON
    @Override
    public float getUVBT() {
        return _UVBT;
    }

    @Override
    public void setUVBT(float UVBT) {
        _UVBT = UVBT;
    }

    @JSON
    @Override
    public float getRAIN() {
        return _RAIN;
    }

    @Override
    public void setRAIN(float RAIN) {
        _RAIN = RAIN;
    }

    @JSON
    @Override
    public float getTDRY0() {
        return _TDRY0;
    }

    @Override
    public void setTDRY0(float TDRY0) {
        _TDRY0 = TDRY0;
    }

    @JSON
    @Override
    public float getTWET0() {
        return _TWET0;
    }

    @Override
    public void setTWET0(float TWET0) {
        _TWET0 = TWET0;
    }

    @JSON
    @Override
    public float getTDRY1() {
        return _TDRY1;
    }

    @Override
    public void setTDRY1(float TDRY1) {
        _TDRY1 = TDRY1;
    }

    @JSON
    @Override
    public float getTWET1() {
        return _TWET1;
    }

    @Override
    public void setTWET1(float TWET1) {
        _TWET1 = TWET1;
    }

    @JSON
    @Override
    public float getTDRY2() {
        return _TDRY2;
    }

    @Override
    public void setTDRY2(float TDRY2) {
        _TDRY2 = TDRY2;
    }

    @JSON
    @Override
    public float getTWET2() {
        return _TWET2;
    }

    @Override
    public void setTWET2(float TWET2) {
        _TWET2 = TWET2;
    }

    @JSON
    @Override
    public float getTDRY3() {
        return _TDRY3;
    }

    @Override
    public void setTDRY3(float TDRY3) {
        _TDRY3 = TDRY3;
    }

    @JSON
    @Override
    public float getTWET3() {
        return _TWET3;
    }

    @Override
    public void setTWET3(float TWET3) {
        _TWET3 = TWET3;
    }

    @JSON
    @Override
    public float getTDRY4() {
        return _TDRY4;
    }

    @Override
    public void setTDRY4(float TDRY4) {
        _TDRY4 = TDRY4;
    }

    @JSON
    @Override
    public float getTWET4() {
        return _TWET4;
    }

    @Override
    public void setTWET4(float TWET4) {
        _TWET4 = TWET4;
    }

    @JSON
    @Override
    public float getST() {
        return _ST;
    }

    @Override
    public void setST(float ST) {
        _ST = ST;
    }

    @JSON
    @Override
    public float getWDIR() {
        return _WDIR;
    }

    @Override
    public void setWDIR(float WDIR) {
        _WDIR = WDIR;
    }

    @JSON
    @Override
    public float getCPC1() {
        return _CPC1;
    }

    @Override
    public void setCPC1(float CPC1) {
        _CPC1 = CPC1;
    }

    @JSON
    @Override
    public float getO3_0() {
        return _O3_0;
    }

    @Override
    public void setO3_0(float O3_0) {
        _O3_0 = O3_0;
    }

    @JSON
    @Override
    public float getO3_1() {
        return _O3_1;
    }

    @Override
    public void setO3_1(float O3_1) {
        _O3_1 = O3_1;
    }

    @JSON
    @Override
    public float getO3_2() {
        return _O3_2;
    }

    @Override
    public void setO3_2(float O3_2) {
        _O3_2 = O3_2;
    }

    @JSON
    @Override
    public float getO3_3() {
        return _O3_3;
    }

    @Override
    public void setO3_3(float O3_3) {
        _O3_3 = O3_3;
    }

    @JSON
    @Override
    public float getO3_4() {
        return _O3_4;
    }

    @Override
    public void setO3_4(float O3_4) {
        _O3_4 = O3_4;
    }

    @JSON
    @Override
    public float getSO2_0() {
        return _SO2_0;
    }

    @Override
    public void setSO2_0(float SO2_0) {
        _SO2_0 = SO2_0;
    }

    @JSON
    @Override
    public float getSO2_1() {
        return _SO2_1;
    }

    @Override
    public void setSO2_1(float SO2_1) {
        _SO2_1 = SO2_1;
    }

    @JSON
    @Override
    public float getSO2_2() {
        return _SO2_2;
    }

    @Override
    public void setSO2_2(float SO2_2) {
        _SO2_2 = SO2_2;
    }

    @JSON
    @Override
    public float getSO2_3() {
        return _SO2_3;
    }

    @Override
    public void setSO2_3(float SO2_3) {
        _SO2_3 = SO2_3;
    }

    @JSON
    @Override
    public float getSO2_4() {
        return _SO2_4;
    }

    @Override
    public void setSO2_4(float SO2_4) {
        _SO2_4 = SO2_4;
    }

    @JSON
    @Override
    public float getNO_0() {
        return _NO_0;
    }

    @Override
    public void setNO_0(float NO_0) {
        _NO_0 = NO_0;
    }

    @JSON
    @Override
    public float getNO_1() {
        return _NO_1;
    }

    @Override
    public void setNO_1(float NO_1) {
        _NO_1 = NO_1;
    }

    @JSON
    @Override
    public float getNO_2() {
        return _NO_2;
    }

    @Override
    public void setNO_2(float NO_2) {
        _NO_2 = NO_2;
    }

    @JSON
    @Override
    public float getNO_4() {
        return _NO_4;
    }

    @Override
    public void setNO_4(float NO_4) {
        _NO_4 = NO_4;
    }

    @JSON
    @Override
    public float getNOX_0() {
        return _NOX_0;
    }

    @Override
    public void setNOX_0(float NOX_0) {
        _NOX_0 = NOX_0;
    }

    @JSON
    @Override
    public float getNOX_1() {
        return _NOX_1;
    }

    @Override
    public void setNOX_1(float NOX_1) {
        _NOX_1 = NOX_1;
    }

    @JSON
    @Override
    public float getNOX_2() {
        return _NOX_2;
    }

    @Override
    public void setNOX_2(float NOX_2) {
        _NOX_2 = NOX_2;
    }

    @JSON
    @Override
    public float getNOX_4() {
        return _NOX_4;
    }

    @Override
    public void setNOX_4(float NOX_4) {
        _NOX_4 = NOX_4;
    }

    @JSON
    @Override
    public float getP() {
        return _P;
    }

    @Override
    public void setP(float P) {
        _P = P;
    }

    @JSON
    @Override
    public float getHUM_RH() {
        return _HUM_RH;
    }

    @Override
    public void setHUM_RH(float HUM_RH) {
        _HUM_RH = HUM_RH;
    }

    @JSON
    @Override
    public float getHUM_T() {
        return _HUM_T;
    }

    @Override
    public void setHUM_T(float HUM_T) {
        _HUM_T = HUM_T;
    }

    @JSON
    @Override
    public float getTemp() {
        return _temp;
    }

    @Override
    public void setTemp(float temp) {
        _temp = temp;
    }

    @JSON
    @Override
    public float getWS00() {
        return _WS00;
    }

    @Override
    public void setWS00(float WS00) {
        _WS00 = WS00;
    }

    @JSON
    @Override
    public float getVisibility() {
        return _visibility;
    }

    @Override
    public void setVisibility(float visibility) {
        _visibility = visibility;
    }

    @JSON
    @Override
    public float getRainint() {
        return _rainint;
    }

    @Override
    public void setRainint(float rainint) {
        _rainint = rainint;
    }

    @JSON
    @Override
    public float getPrecipacc() {
        return _Precipacc;
    }

    @Override
    public void setPrecipacc(float Precipacc) {
        _Precipacc = Precipacc;
    }

    @JSON
    @Override
    public float getHaildiammax() {
        return _haildiammax;
    }

    @Override
    public void setHaildiammax(float haildiammax) {
        _haildiammax = haildiammax;
    }

    @JSON
    @Override
    public float getSnowint() {
        return _snowint;
    }

    @Override
    public void setSnowint(float snowint) {
        _snowint = snowint;
    }

    @JSON
    @Override
    public float getVisibilitylpm() {
        return _visibilitylpm;
    }

    @Override
    public void setVisibilitylpm(float visibilitylpm) {
        _visibilitylpm = visibilitylpm;
    }

    @JSON
    @Override
    public int getWthcode() {
        return _wthcode;
    }

    @Override
    public void setWthcode(int wthcode) {
        _wthcode = wthcode;
    }

    @JSON
    @Override
    public float getCO_1() {
        return _CO_1;
    }

    @Override
    public void setCO_1(float CO_1) {
        _CO_1 = CO_1;
    }

    @JSON
    @Override
    public int getQuality() {
        return _quality;
    }

    @Override
    public void setQuality(int quality) {
        _quality = quality;
    }

    @JSON
    @Override
    public float getTsoil() {
        return _Tsoil;
    }

    @Override
    public void setTsoil(float Tsoil) {
        _Tsoil = Tsoil;
    }

    @JSON
    @Override
    public float getWsoil() {
        return _wsoil;
    }

    @Override
    public void setWsoil(float wsoil) {
        _wsoil = wsoil;
    }

    @JSON
    @Override
    public float getCO206() {
        return _CO206;
    }

    @Override
    public void setCO206(float CO206) {
        _CO206 = CO206;
    }

    @JSON
    @Override
    public float getCO2soil() {
        return _CO2soil;
    }

    @Override
    public void setCO2soil(float CO2soil) {
        _CO2soil = CO2soil;
    }

    @JSON
    @Override
    public int getTsoil_EMEP() {
        return _Tsoil_EMEP;
    }

    @Override
    public void setTsoil_EMEP(int Tsoil_EMEP) {
        _Tsoil_EMEP = Tsoil_EMEP;
    }

    @JSON
    @Override
    public int getWsoil_EMEP() {
        return _wsoil_EMEP;
    }

    @Override
    public void setWsoil_EMEP(int wsoil_EMEP) {
        _wsoil_EMEP = wsoil_EMEP;
    }

    @JSON
    @Override
    public int getCO206_EMEP() {
        return _CO206_EMEP;
    }

    @Override
    public void setCO206_EMEP(int CO206_EMEP) {
        _CO206_EMEP = CO206_EMEP;
    }

    @JSON
    @Override
    public int getCO2soil_EMEP() {
        return _CO2soil_EMEP;
    }

    @Override
    public void setCO2soil_EMEP(int CO2soil_EMEP) {
        _CO2soil_EMEP = CO2soil_EMEP;
    }

    @Override
    public Varriometa toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Varriometa) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        VarriometaImpl varriometaImpl = new VarriometaImpl();

        varriometaImpl.setSAMPTIME(getSAMPTIME());
        varriometaImpl.setWS0(getWS0());
        varriometaImpl.setWS1(getWS1());
        varriometaImpl.setWS2(getWS2());
        varriometaImpl.setWS3(getWS3());
        varriometaImpl.setWS4(getWS4());
        varriometaImpl.setRMM(getRMM());
        varriometaImpl.setTLOG(getTLOG());
        varriometaImpl.setPAR(getPAR());
        varriometaImpl.setGLOB(getGLOB());
        varriometaImpl.setREFL(getREFL());
        varriometaImpl.setNET(getNET());
        varriometaImpl.setUVA(getUVA());
        varriometaImpl.setUVB(getUVB());
        varriometaImpl.setUVAT(getUVAT());
        varriometaImpl.setUVBT(getUVBT());
        varriometaImpl.setRAIN(getRAIN());
        varriometaImpl.setTDRY0(getTDRY0());
        varriometaImpl.setTWET0(getTWET0());
        varriometaImpl.setTDRY1(getTDRY1());
        varriometaImpl.setTWET1(getTWET1());
        varriometaImpl.setTDRY2(getTDRY2());
        varriometaImpl.setTWET2(getTWET2());
        varriometaImpl.setTDRY3(getTDRY3());
        varriometaImpl.setTWET3(getTWET3());
        varriometaImpl.setTDRY4(getTDRY4());
        varriometaImpl.setTWET4(getTWET4());
        varriometaImpl.setST(getST());
        varriometaImpl.setWDIR(getWDIR());
        varriometaImpl.setCPC1(getCPC1());
        varriometaImpl.setO3_0(getO3_0());
        varriometaImpl.setO3_1(getO3_1());
        varriometaImpl.setO3_2(getO3_2());
        varriometaImpl.setO3_3(getO3_3());
        varriometaImpl.setO3_4(getO3_4());
        varriometaImpl.setSO2_0(getSO2_0());
        varriometaImpl.setSO2_1(getSO2_1());
        varriometaImpl.setSO2_2(getSO2_2());
        varriometaImpl.setSO2_3(getSO2_3());
        varriometaImpl.setSO2_4(getSO2_4());
        varriometaImpl.setNO_0(getNO_0());
        varriometaImpl.setNO_1(getNO_1());
        varriometaImpl.setNO_2(getNO_2());
        varriometaImpl.setNO_4(getNO_4());
        varriometaImpl.setNOX_0(getNOX_0());
        varriometaImpl.setNOX_1(getNOX_1());
        varriometaImpl.setNOX_2(getNOX_2());
        varriometaImpl.setNOX_4(getNOX_4());
        varriometaImpl.setP(getP());
        varriometaImpl.setHUM_RH(getHUM_RH());
        varriometaImpl.setHUM_T(getHUM_T());
        varriometaImpl.setTemp(getTemp());
        varriometaImpl.setWS00(getWS00());
        varriometaImpl.setVisibility(getVisibility());
        varriometaImpl.setRainint(getRainint());
        varriometaImpl.setPrecipacc(getPrecipacc());
        varriometaImpl.setHaildiammax(getHaildiammax());
        varriometaImpl.setSnowint(getSnowint());
        varriometaImpl.setVisibilitylpm(getVisibilitylpm());
        varriometaImpl.setWthcode(getWthcode());
        varriometaImpl.setCO_1(getCO_1());
        varriometaImpl.setQuality(getQuality());
        varriometaImpl.setTsoil(getTsoil());
        varriometaImpl.setWsoil(getWsoil());
        varriometaImpl.setCO206(getCO206());
        varriometaImpl.setCO2soil(getCO2soil());
        varriometaImpl.setTsoil_EMEP(getTsoil_EMEP());
        varriometaImpl.setWsoil_EMEP(getWsoil_EMEP());
        varriometaImpl.setCO206_EMEP(getCO206_EMEP());
        varriometaImpl.setCO2soil_EMEP(getCO2soil_EMEP());

        varriometaImpl.resetOriginalValues();

        return varriometaImpl;
    }

    @Override
    public int compareTo(Varriometa varriometa) {
        java.util.Date primaryKey = varriometa.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Varriometa)) {
            return false;
        }

        Varriometa varriometa = (Varriometa) obj;

        java.util.Date primaryKey = varriometa.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Varriometa> toCacheModel() {
        VarriometaCacheModel varriometaCacheModel = new VarriometaCacheModel();

        Date SAMPTIME = getSAMPTIME();

        if (SAMPTIME != null) {
            varriometaCacheModel.SAMPTIME = SAMPTIME.getTime();
        } else {
            varriometaCacheModel.SAMPTIME = Long.MIN_VALUE;
        }

        varriometaCacheModel.WS0 = getWS0();

        varriometaCacheModel.WS1 = getWS1();

        varriometaCacheModel.WS2 = getWS2();

        varriometaCacheModel.WS3 = getWS3();

        varriometaCacheModel.WS4 = getWS4();

        varriometaCacheModel.RMM = getRMM();

        varriometaCacheModel.TLOG = getTLOG();

        varriometaCacheModel.PAR = getPAR();

        varriometaCacheModel.GLOB = getGLOB();

        varriometaCacheModel.REFL = getREFL();

        varriometaCacheModel.NET = getNET();

        varriometaCacheModel.UVA = getUVA();

        varriometaCacheModel.UVB = getUVB();

        varriometaCacheModel.UVAT = getUVAT();

        varriometaCacheModel.UVBT = getUVBT();

        varriometaCacheModel.RAIN = getRAIN();

        varriometaCacheModel.TDRY0 = getTDRY0();

        varriometaCacheModel.TWET0 = getTWET0();

        varriometaCacheModel.TDRY1 = getTDRY1();

        varriometaCacheModel.TWET1 = getTWET1();

        varriometaCacheModel.TDRY2 = getTDRY2();

        varriometaCacheModel.TWET2 = getTWET2();

        varriometaCacheModel.TDRY3 = getTDRY3();

        varriometaCacheModel.TWET3 = getTWET3();

        varriometaCacheModel.TDRY4 = getTDRY4();

        varriometaCacheModel.TWET4 = getTWET4();

        varriometaCacheModel.ST = getST();

        varriometaCacheModel.WDIR = getWDIR();

        varriometaCacheModel.CPC1 = getCPC1();

        varriometaCacheModel.O3_0 = getO3_0();

        varriometaCacheModel.O3_1 = getO3_1();

        varriometaCacheModel.O3_2 = getO3_2();

        varriometaCacheModel.O3_3 = getO3_3();

        varriometaCacheModel.O3_4 = getO3_4();

        varriometaCacheModel.SO2_0 = getSO2_0();

        varriometaCacheModel.SO2_1 = getSO2_1();

        varriometaCacheModel.SO2_2 = getSO2_2();

        varriometaCacheModel.SO2_3 = getSO2_3();

        varriometaCacheModel.SO2_4 = getSO2_4();

        varriometaCacheModel.NO_0 = getNO_0();

        varriometaCacheModel.NO_1 = getNO_1();

        varriometaCacheModel.NO_2 = getNO_2();

        varriometaCacheModel.NO_4 = getNO_4();

        varriometaCacheModel.NOX_0 = getNOX_0();

        varriometaCacheModel.NOX_1 = getNOX_1();

        varriometaCacheModel.NOX_2 = getNOX_2();

        varriometaCacheModel.NOX_4 = getNOX_4();

        varriometaCacheModel.P = getP();

        varriometaCacheModel.HUM_RH = getHUM_RH();

        varriometaCacheModel.HUM_T = getHUM_T();

        varriometaCacheModel.temp = getTemp();

        varriometaCacheModel.WS00 = getWS00();

        varriometaCacheModel.visibility = getVisibility();

        varriometaCacheModel.rainint = getRainint();

        varriometaCacheModel.Precipacc = getPrecipacc();

        varriometaCacheModel.haildiammax = getHaildiammax();

        varriometaCacheModel.snowint = getSnowint();

        varriometaCacheModel.visibilitylpm = getVisibilitylpm();

        varriometaCacheModel.wthcode = getWthcode();

        varriometaCacheModel.CO_1 = getCO_1();

        varriometaCacheModel.quality = getQuality();

        varriometaCacheModel.Tsoil = getTsoil();

        varriometaCacheModel.wsoil = getWsoil();

        varriometaCacheModel.CO206 = getCO206();

        varriometaCacheModel.CO2soil = getCO2soil();

        varriometaCacheModel.Tsoil_EMEP = getTsoil_EMEP();

        varriometaCacheModel.wsoil_EMEP = getWsoil_EMEP();

        varriometaCacheModel.CO206_EMEP = getCO206_EMEP();

        varriometaCacheModel.CO2soil_EMEP = getCO2soil_EMEP();

        return varriometaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(141);

        sb.append("{SAMPTIME=");
        sb.append(getSAMPTIME());
        sb.append(", WS0=");
        sb.append(getWS0());
        sb.append(", WS1=");
        sb.append(getWS1());
        sb.append(", WS2=");
        sb.append(getWS2());
        sb.append(", WS3=");
        sb.append(getWS3());
        sb.append(", WS4=");
        sb.append(getWS4());
        sb.append(", RMM=");
        sb.append(getRMM());
        sb.append(", TLOG=");
        sb.append(getTLOG());
        sb.append(", PAR=");
        sb.append(getPAR());
        sb.append(", GLOB=");
        sb.append(getGLOB());
        sb.append(", REFL=");
        sb.append(getREFL());
        sb.append(", NET=");
        sb.append(getNET());
        sb.append(", UVA=");
        sb.append(getUVA());
        sb.append(", UVB=");
        sb.append(getUVB());
        sb.append(", UVAT=");
        sb.append(getUVAT());
        sb.append(", UVBT=");
        sb.append(getUVBT());
        sb.append(", RAIN=");
        sb.append(getRAIN());
        sb.append(", TDRY0=");
        sb.append(getTDRY0());
        sb.append(", TWET0=");
        sb.append(getTWET0());
        sb.append(", TDRY1=");
        sb.append(getTDRY1());
        sb.append(", TWET1=");
        sb.append(getTWET1());
        sb.append(", TDRY2=");
        sb.append(getTDRY2());
        sb.append(", TWET2=");
        sb.append(getTWET2());
        sb.append(", TDRY3=");
        sb.append(getTDRY3());
        sb.append(", TWET3=");
        sb.append(getTWET3());
        sb.append(", TDRY4=");
        sb.append(getTDRY4());
        sb.append(", TWET4=");
        sb.append(getTWET4());
        sb.append(", ST=");
        sb.append(getST());
        sb.append(", WDIR=");
        sb.append(getWDIR());
        sb.append(", CPC1=");
        sb.append(getCPC1());
        sb.append(", O3_0=");
        sb.append(getO3_0());
        sb.append(", O3_1=");
        sb.append(getO3_1());
        sb.append(", O3_2=");
        sb.append(getO3_2());
        sb.append(", O3_3=");
        sb.append(getO3_3());
        sb.append(", O3_4=");
        sb.append(getO3_4());
        sb.append(", SO2_0=");
        sb.append(getSO2_0());
        sb.append(", SO2_1=");
        sb.append(getSO2_1());
        sb.append(", SO2_2=");
        sb.append(getSO2_2());
        sb.append(", SO2_3=");
        sb.append(getSO2_3());
        sb.append(", SO2_4=");
        sb.append(getSO2_4());
        sb.append(", NO_0=");
        sb.append(getNO_0());
        sb.append(", NO_1=");
        sb.append(getNO_1());
        sb.append(", NO_2=");
        sb.append(getNO_2());
        sb.append(", NO_4=");
        sb.append(getNO_4());
        sb.append(", NOX_0=");
        sb.append(getNOX_0());
        sb.append(", NOX_1=");
        sb.append(getNOX_1());
        sb.append(", NOX_2=");
        sb.append(getNOX_2());
        sb.append(", NOX_4=");
        sb.append(getNOX_4());
        sb.append(", P=");
        sb.append(getP());
        sb.append(", HUM_RH=");
        sb.append(getHUM_RH());
        sb.append(", HUM_T=");
        sb.append(getHUM_T());
        sb.append(", temp=");
        sb.append(getTemp());
        sb.append(", WS00=");
        sb.append(getWS00());
        sb.append(", visibility=");
        sb.append(getVisibility());
        sb.append(", rainint=");
        sb.append(getRainint());
        sb.append(", Precipacc=");
        sb.append(getPrecipacc());
        sb.append(", haildiammax=");
        sb.append(getHaildiammax());
        sb.append(", snowint=");
        sb.append(getSnowint());
        sb.append(", visibilitylpm=");
        sb.append(getVisibilitylpm());
        sb.append(", wthcode=");
        sb.append(getWthcode());
        sb.append(", CO_1=");
        sb.append(getCO_1());
        sb.append(", quality=");
        sb.append(getQuality());
        sb.append(", Tsoil=");
        sb.append(getTsoil());
        sb.append(", wsoil=");
        sb.append(getWsoil());
        sb.append(", CO206=");
        sb.append(getCO206());
        sb.append(", CO2soil=");
        sb.append(getCO2soil());
        sb.append(", Tsoil_EMEP=");
        sb.append(getTsoil_EMEP());
        sb.append(", wsoil_EMEP=");
        sb.append(getWsoil_EMEP());
        sb.append(", CO206_EMEP=");
        sb.append(getCO206_EMEP());
        sb.append(", CO2soil_EMEP=");
        sb.append(getCO2soil_EMEP());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(214);

        sb.append("<model><model-name>");
        sb.append("fi.csc.smear.db.model.Varriometa");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>SAMPTIME</column-name><column-value><![CDATA[");
        sb.append(getSAMPTIME());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS0</column-name><column-value><![CDATA[");
        sb.append(getWS0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS1</column-name><column-value><![CDATA[");
        sb.append(getWS1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS2</column-name><column-value><![CDATA[");
        sb.append(getWS2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS3</column-name><column-value><![CDATA[");
        sb.append(getWS3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS4</column-name><column-value><![CDATA[");
        sb.append(getWS4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>RMM</column-name><column-value><![CDATA[");
        sb.append(getRMM());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TLOG</column-name><column-value><![CDATA[");
        sb.append(getTLOG());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>PAR</column-name><column-value><![CDATA[");
        sb.append(getPAR());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>GLOB</column-name><column-value><![CDATA[");
        sb.append(getGLOB());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>REFL</column-name><column-value><![CDATA[");
        sb.append(getREFL());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NET</column-name><column-value><![CDATA[");
        sb.append(getNET());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>UVA</column-name><column-value><![CDATA[");
        sb.append(getUVA());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>UVB</column-name><column-value><![CDATA[");
        sb.append(getUVB());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>UVAT</column-name><column-value><![CDATA[");
        sb.append(getUVAT());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>UVBT</column-name><column-value><![CDATA[");
        sb.append(getUVBT());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>RAIN</column-name><column-value><![CDATA[");
        sb.append(getRAIN());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TDRY0</column-name><column-value><![CDATA[");
        sb.append(getTDRY0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TWET0</column-name><column-value><![CDATA[");
        sb.append(getTWET0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TDRY1</column-name><column-value><![CDATA[");
        sb.append(getTDRY1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TWET1</column-name><column-value><![CDATA[");
        sb.append(getTWET1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TDRY2</column-name><column-value><![CDATA[");
        sb.append(getTDRY2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TWET2</column-name><column-value><![CDATA[");
        sb.append(getTWET2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TDRY3</column-name><column-value><![CDATA[");
        sb.append(getTDRY3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TWET3</column-name><column-value><![CDATA[");
        sb.append(getTWET3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TDRY4</column-name><column-value><![CDATA[");
        sb.append(getTDRY4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>TWET4</column-name><column-value><![CDATA[");
        sb.append(getTWET4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ST</column-name><column-value><![CDATA[");
        sb.append(getST());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WDIR</column-name><column-value><![CDATA[");
        sb.append(getWDIR());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CPC1</column-name><column-value><![CDATA[");
        sb.append(getCPC1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>O3_0</column-name><column-value><![CDATA[");
        sb.append(getO3_0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>O3_1</column-name><column-value><![CDATA[");
        sb.append(getO3_1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>O3_2</column-name><column-value><![CDATA[");
        sb.append(getO3_2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>O3_3</column-name><column-value><![CDATA[");
        sb.append(getO3_3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>O3_4</column-name><column-value><![CDATA[");
        sb.append(getO3_4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>SO2_0</column-name><column-value><![CDATA[");
        sb.append(getSO2_0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>SO2_1</column-name><column-value><![CDATA[");
        sb.append(getSO2_1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>SO2_2</column-name><column-value><![CDATA[");
        sb.append(getSO2_2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>SO2_3</column-name><column-value><![CDATA[");
        sb.append(getSO2_3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>SO2_4</column-name><column-value><![CDATA[");
        sb.append(getSO2_4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NO_0</column-name><column-value><![CDATA[");
        sb.append(getNO_0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NO_1</column-name><column-value><![CDATA[");
        sb.append(getNO_1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NO_2</column-name><column-value><![CDATA[");
        sb.append(getNO_2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NO_4</column-name><column-value><![CDATA[");
        sb.append(getNO_4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NOX_0</column-name><column-value><![CDATA[");
        sb.append(getNOX_0());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NOX_1</column-name><column-value><![CDATA[");
        sb.append(getNOX_1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NOX_2</column-name><column-value><![CDATA[");
        sb.append(getNOX_2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>NOX_4</column-name><column-value><![CDATA[");
        sb.append(getNOX_4());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>P</column-name><column-value><![CDATA[");
        sb.append(getP());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>HUM_RH</column-name><column-value><![CDATA[");
        sb.append(getHUM_RH());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>HUM_T</column-name><column-value><![CDATA[");
        sb.append(getHUM_T());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>temp</column-name><column-value><![CDATA[");
        sb.append(getTemp());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>WS00</column-name><column-value><![CDATA[");
        sb.append(getWS00());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>visibility</column-name><column-value><![CDATA[");
        sb.append(getVisibility());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rainint</column-name><column-value><![CDATA[");
        sb.append(getRainint());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>Precipacc</column-name><column-value><![CDATA[");
        sb.append(getPrecipacc());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>haildiammax</column-name><column-value><![CDATA[");
        sb.append(getHaildiammax());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>snowint</column-name><column-value><![CDATA[");
        sb.append(getSnowint());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>visibilitylpm</column-name><column-value><![CDATA[");
        sb.append(getVisibilitylpm());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>wthcode</column-name><column-value><![CDATA[");
        sb.append(getWthcode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CO_1</column-name><column-value><![CDATA[");
        sb.append(getCO_1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>quality</column-name><column-value><![CDATA[");
        sb.append(getQuality());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>Tsoil</column-name><column-value><![CDATA[");
        sb.append(getTsoil());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>wsoil</column-name><column-value><![CDATA[");
        sb.append(getWsoil());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CO206</column-name><column-value><![CDATA[");
        sb.append(getCO206());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CO2soil</column-name><column-value><![CDATA[");
        sb.append(getCO2soil());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>Tsoil_EMEP</column-name><column-value><![CDATA[");
        sb.append(getTsoil_EMEP());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>wsoil_EMEP</column-name><column-value><![CDATA[");
        sb.append(getWsoil_EMEP());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CO206_EMEP</column-name><column-value><![CDATA[");
        sb.append(getCO206_EMEP());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>CO2soil_EMEP</column-name><column-value><![CDATA[");
        sb.append(getCO2soil_EMEP());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
